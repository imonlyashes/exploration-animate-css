{"mappings":"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","sources":["src/assets/scripts/RGraph.svg.common.tooltips.js"],"sourcesContent":["'version:2022-09-11 (6.09)';\n//\n    // o--------------------------------------------------------------------------------o\n    // | This file is part of the RGraph package - you can learn more at:               |\n    // |                                                                                |\n    // |                         https://www.rgraph.net                                 |\n    // |                                                                                |\n    // | RGraph is licensed under the Open Source MIT license. That means that it's     |\n    // | totally free to use and there are no restrictions on what you can do with it!  |\n    // o--------------------------------------------------------------------------------o\n\n    RGraph     = window.RGraph || {isrgraph:true,isRGraph:true,rgraph:true};\n    RGraph.SVG = RGraph.SVG || {};\n\n// Module pattern\n(function (win, doc, undefined)\n{\n    //\n    // This is used in two functions, hence it's here\n    //\n    RGraph.SVG.tooltips       = {};\n    RGraph.SVG.tooltips.css   =\n    RGraph.SVG.tooltips.style = {\n        display:    'inline-block',\n        position:   'absolute',\n        padding:    '6px',\n        lineHeight: 'initial',\n        fontFamily: 'Arial',\n        fontSize:   '12pt',\n        fontWeight: 'normal',\n        textAlign:  'center',\n        left:       0,\n        top:        0,\n        backgroundColor: 'black',\n        color:      'white',\n        visibility: 'visible',\n        zIndex:     3,\n        borderRadius: '5px',\n        boxShadow:  'rgba(96,96,96,0.5) 0 0 5px',\n        transition: 'left ease-out .25s, top ease-out .25s'\n    };\n\n\n    //\n    // Shows a tooltip\n    //\n    // @param obj The chart object\n    // @param opt The options\n    //\n    RGraph.SVG.tooltip = function (opt)\n    {\n        var obj        = opt.object;\n        var properties = obj.properties;\n\n        // Fire the beforetooltip event\n        RGraph.SVG.fireCustomEvent(obj, 'onbeforetooltip');\n\n\n        if (!opt.text || typeof opt.text === 'undefined' || RGraph.SVG.trim(opt.text).length === 0) {\n            if (typeof properties.tooltipsOverride !== 'function') {\n                return;\n            }\n        }\n\n\n\n\n\n\n        //\n        // chart.tooltip.override allows you to totally take control of rendering the tooltip yourself\n        //\n        if (RGraph.SVG.isFunction(properties.tooltipsOverride)) {\n\n            // Add the body click handler that clears the highlight if necessary\n            //\n            document.body.addEventListener('mouseup', function (e)\n            {\n                obj.removeHighlight();\n            }, false);\n\n            return (properties.tooltipsOverride)(obj, opt);\n        }\n\n\n\n\n\n\n\n        // Create the tooltip DIV element\n        if (!RGraph.SVG.REG.get('tooltip')) {\n\n            var tooltipObj        = document.createElement('DIV');\n            tooltipObj.className  = properties.tooltipsCssClass;\n    \n    \n    \n    \n            // Add the default CSS to the tooltip\n            for (var i in RGraph.SVG.tooltips.style) {\n                if (typeof i === 'string') {\n                    tooltipObj.style[i] = substitute(RGraph.SVG.tooltips.style[i]);\n                }\n            }\n\n            for (var i in RGraph.SVG.tooltips.css) {\n                if (typeof i === 'string') {\n                    tooltipObj.style[i] = substitute(RGraph.SVG.tooltips.css[i]);\n                }\n            }\n            \n            //\n            // If the tooltipsCss property is populated the add those values\n            // to the tooltip\n            //\n            if (!RGraph.SVG.isNull(obj.properties.tooltipsCss)) {\n                for (var i in obj.properties.tooltipsCss) {\n                    if (typeof i === 'string') {\n                        tooltipObj.style[i] = substitute(obj.properties.tooltipsCss[i]);\n                    }\n                }\n            }\n\n\n\n\n        // Reuse an existing tooltip\n        } else {\n            var tooltipObj = RGraph.SVG.REG.get('tooltip');\n            tooltipObj.__object__.removeHighlight();\n            \n            // This prevents the object from continuously growing\n            tooltipObj.style.width = '';\n        }\n\n\n\n\n        if (RGraph.SVG.REG.get('tooltip-lasty')) {\n            tooltipObj.style.left = RGraph.SVG.REG.get('tooltip-lastx') + 'px';\n            tooltipObj.style.top  = RGraph.SVG.REG.get('tooltip-lasty') + 'px';\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        ///////////////////////////////////////\n        // Do tooltip text substitution here //\n        ///////////////////////////////////////\n        function substitute (original)\n        {\n            // Ensure that it's a string first\n            original = String(original);\n\n            if (typeof opt.object.tooltipSubstitutions !== 'function') {\n                return original;\n            }\n\n            // Get hold of the indexes from the sequentialIndex that we have.\n            //\n            if (typeof opt.object.tooltipSubstitutions === 'function') {\n                var specific = opt.object.tooltipSubstitutions({\n                    index: opt.sequentialIndex\n                });\n            }\n\n\n            // This allows for escaping the percent\n            var text = original.replace(/%%/g, '___--PERCENT--___')\n\n\n            //\n            // Draws the key in the tooltip\n            //\n\n            var keyReplacementFunction = function ()\n            {\n                if (!specific.values) {\n                    return;\n                }\n            \n                //\n                // Allow the user to specify the key colors\n                //\n                var colors = properties.tooltipsFormattedKeyColors ? properties.tooltipsFormattedKeyColors : properties.colors;\n            \n                // Build up the HTML table that becomes the key\n                for (var i=0,str=[]; i<specific.values.length; ++i) {\n\n                    var value = (typeof specific.values === 'object' && typeof specific.values[i] === 'number') ? specific.values[i] : 0;\n                    var color = colors[i];\n                    var label = ( (typeof properties.tooltipsFormattedKeyLabels === 'object' && typeof properties.tooltipsFormattedKeyLabels[i] === 'string') ? properties.tooltipsFormattedKeyLabels[i] : '');\n\n\n\n                    // Chart specific customisations -------------------------\n                    if (typeof opt.object.tooltipsFormattedCustom === 'function') {\n            \n                        // The index/group/sequential index\n                        // The index\n                        // The colors\n                        var ret = opt.object.tooltipsFormattedCustom(\n                            specific,\n                            i,\n                            colors\n                        );\n\n                        if (ret.continue) {continue;};\n            \n                        if (typeof ret.label === 'string') {label = ret.label;};\n                        if (ret.color)                     {color = ret.color;};\n                        if (typeof ret.value === 'number') {value = ret.value;};\n                    }\n            \n            \n            \n            \n            \n            \n            \n            \n                    value = RGraph.SVG.numberFormat({\n                         object: opt.object,\n                            num: value.toFixed(opt.object.properties.tooltipsFormattedDecimals),\n                       thousand: opt.object.properties.tooltipsFormattedThousand  || ',',\n                          point: opt.object.properties.tooltipsFormattedPoint     || '.',\n                        prepend: opt.object.properties.tooltipsFormattedUnitsPre  || '',\n                         append: opt.object.properties.tooltipsFormattedUnitsPost || ''\n                    });\n            \n                    // If the tooltipsFormattedKeyColorsShape property is set to circle then add\n                    // some border-radius to the DIV tag\n                    //\n                    var borderRadius = 0;\n                    \n                    if (   typeof opt.object.properties.tooltipsFormattedKeyColorsShape === 'string'\n                        && opt.object.properties.tooltipsFormattedKeyColorsShape === 'circle') {\n            \n                        borderRadius = '100px';\n                    }\n            \n                    // Facilitate the  property that allows CSS to be added to\n                    // the tooltip key color blob\n                    var tooltipsFormattedKeyColorsCss = '';\n                    if (properties.tooltipsFormattedKeyColorsCss) {\n                        for(property in properties.tooltipsFormattedKeyColorsCss) {\n                            if (typeof property === 'string') {\n                                tooltipsFormattedKeyColorsCss += '{1}: {2};'.format(property.replace(/[A-Z]/, function (match)\n                                {\n                                    return '-' + match.toLowerCase();\n                                }), String(properties.tooltipsFormattedKeyColorsCss[property]));\n                            }\n                        }\n                    }\n            \n                    str[i] = '<tr><td><div class=\"RGraph_tooltipsFormattedKeyColor\" id=\"RGraph_tooltipsFormattedKeyColor_' + i + '\" '\n                        + '>Ml</div></td><td>'\n                        + '<span id=\"RGraph_tooltipsFormattedKeyLabel_' + i + '\">' + label + '</span>'\n                        + ' ' + value + '</td></tr>';\n\n                    // Now that styles can't be applied inline\n                    // (due to the CSP header) then apply them with\n                    // JavaScript after a small delay.\n                    (function (index, color, borderRadius)\n                    {\n                        setTimeout(function ()\n                        {\n                            // Align the label left\n                            var node = document.getElementById('RGraph_tooltipsFormattedKeyLabel_' + index);\n                            if (node) {\n                                node.style.textAlign = 'left'\n                            }\n\n                            // Add some styles to the color blob\n                            var colorBlob = document.getElementById('RGraph_tooltipsFormattedKeyColor_' + index);\n                            \n                            if (colorBlob) {\n                                colorBlob.style.textAlign       = 'left';\n                                colorBlob.style.backgroundColor = color;\n                                colorBlob.style.color           = 'transparent';\n                                colorBlob.style.pointerEvents   = 'none';\n                                colorBlob.style.borderRadius    = borderRadius;\n\n                                // Add user specified styles from the\n                                // tooltipsFormattedKeyColorsCss property\n                                for (var property in tooltipsFormattedKeyColorsCss) {\n                                    if (typeof property === 'string') {\n                                        colorBlob.style[property] = tooltipsFormattedKeyColorsCss[property];\n                                    }\n                                }\n                            }\n                            \n                            // Set the default color for the table to inherit\n                            var node = document.getElementById('RGraph_tooltipsFormattedKey_table')\n                            if (node) {\n                                node.style.color = 'inherit';\n                            }\n\n                        }, 1);\n                    })(i, color, borderRadius);\n               }\n                str = str.join('');\n            \n                // Add the key to the tooltip text - replacing the placeholder\n                text = text.replace('%{key}', '<table id=\"RGraph_tooltipsFormattedKey_table\">' + str + '</table>');\n            };\n            \n            keyReplacementFunction();\n\n\n\n\n\n\n\n\n\n\n\n\n\n            // Replace the index of the tooltip\n            text = text.replace(/%{index}/g, specific.index);\n            \n            // Replace the dataset/group of the tooltip\n            text = text.replace(/%{dataset2}/g, specific.dataset2); // Used by the Bipolar\n            text = text.replace(/%{dataset}/g, specific.dataset);\n            text = text.replace(/%{group2}/g, specific.dataset2); // Used by the Bipolar\n            text = text.replace(/%{group}/g, specific.dataset);\n            \n            // Replace the sequentialIndex of the tooltip\n            text = text.replace(/%{sequential_index}/g, specific.sequentialIndex);\n            text = text.replace(/%{seq}/g, specific.sequentialIndex);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            //Do %{list} sunstitution\n            if (text.indexOf('%{list}') !== -1) {\n                (function ()\n                {\n                    if (properties.tooltipsFormattedListType === 'unordered') properties.tooltipsFormattedListType = 'ul';\n                    if (properties.tooltipsFormattedListType === '<ul>')      properties.tooltipsFormattedListType = 'ul';\n                    if (properties.tooltipsFormattedListType === 'ordered')   properties.tooltipsFormattedListType = 'ol';\n                    if (properties.tooltipsFormattedListType === '<ol>')      properties.tooltipsFormattedListType = 'ol';\n            \n                    var str   = properties.tooltipsFormattedListType === 'ol' ? '<ol id=\"rgraph_formatted_tooltips_list\">' : '<ul id=\"rgraph_formatted_tooltips_list\">';\n                    var items = properties.tooltipsFormattedListItems[specific.sequentialIndex];\n                    \n                    if (items && items.length) {\n                        for (var i=0; i<items.length; ++i) {\n                            str += '<li>' + items[i] + '</li>';\n                        }\n                    }\n                    \n                    str += properties.tooltipsFormattedListType === 'ol' ? '</ol>' : '</ul>';\n                    \n                    // Add the list to the tooltip\n                    text = text.replace(/%{list}/, str);\n                    \n                })();\n            }\n\n\n\n\n\n\n\n\n\n\n\n\n            // Do table substitution (ie %{table} )\n            if (text.indexOf('%{table}') !== -1) {\n                (function ()\n                {\n                    var str = '<table>';\n            \n                    // Add the headers if they're defined\n                    if (properties.tooltipsFormattedTableHeaders && properties.tooltipsFormattedTableHeaders.length) {\n                        str += '<thead><tr>';\n                        for (var i=0; i<properties.tooltipsFormattedTableHeaders.length; ++i) {\n                            str += '<th>' + properties.tooltipsFormattedTableHeaders[i] + '</th>';\n                        }\n                        str += '</tr></thead>';\n                    }\n\n\n\n\n\n                    // Add each row of data\n                    if (typeof properties.tooltipsFormattedTableData === 'object' && !RGraph.SVG.isNull(properties.tooltipsFormattedTableData)) {\n                        str += '<tbody>';\n                        for (var i=0; i<properties.tooltipsFormattedTableData[specific.sequentialIndex].length; ++i) {\n                            str += '<tr>';\n                            for (var j=0; j<properties.tooltipsFormattedTableData[specific.sequentialIndex][i].length; ++j) {\n                                str += '<td>' + String(properties.tooltipsFormattedTableData[specific.sequentialIndex][i][j]) + '</td>';\n                            }\n                            str += '</tr>';\n                        }\n                \n                        str += '</tbody>';\n                    }\n                    \n                    // Close the table\n                    str += '</table>';\n            \n                    text = text.replace(/%{table}/g, str);\n                })();\n            }\n\n\n\n\n\n\n\n\n\n\n\n\n\n            // Do property substitution when there's an index to the property\n            var reg = /%{prop(?:erty)?:([_a-z0-9]+)\\[([0-9]+)\\]}/i;\n\n            while (text.match(reg)) {\n\n                var property = RegExp.$1;\n                var index    = parseInt(RegExp.$2);\n\n                if (opt.object.properties[property]) {\n                    text = text.replace(\n                        reg,\n                        opt.object.properties[property][index] || ''\n                    );\n                \n                // Get rid of the text\n                } else {\n                    text = text.replace(reg,'');\n                }\n                    \n                RegExp.lastIndex = null;\n            }\n\n\n\n\n            // Third, replace this: %{property:xxx} (but there's no index to the property)\n            while (text.match(/%{property:([_a-z0-9]+)}/i)) {\n                var str = '%{property:' + RegExp.$1 + '}';\n                text    = text.replace(str, opt.object.properties[RegExp.$1]);\n            }\n\n\n\n\n            // Fourth, replace this: %%prop:xxx%%\n            while (text.match(/%{prop:([_a-z0-9]+)}/i)) {\n                var str = '%{prop:' + RegExp.$1 + '}';\n                text    = text.replace(str, opt.object.properties[RegExp.$1]);\n            }\n\n\n\n\n            // THIS IS ONLY FOR A NON-EQUI-ANGULAR ROSE CHART\n            //\n            // Replace this: %{value2}\n            if (opt.object.type === 'rose' && opt.object.properties.variant === 'non-equi-angular') {\n                while (text.match(/%{value2}/i)) {\n                    text    = text.replace('%{value2}', specific.value2);\n                }\n            }\n\n\n\n\n            // Fifth and sixth, replace this: %{value} and this: %{value_formatted}\n            while (text.match(/%{value(?:_formatted)?}/i)) {\n                \n                var value = specific.value;\n                \n                //\n                // Special case for the Waterfall chart and mid totals\n                //\n                if (opt.object.type === 'waterfall' && specific.index != opt.object.data.length - 1 && RGraph.SVG.isNull(value)) {\n                    \n                    for (var i=0,tot=0; i<specific.index; ++i) {\n                        tot += opt.object.data[i];\n                    }\n                    value = tot;\n                }\n\n                if (text.match(/%{value_formatted}/i)) {\n                    text = text.replace(\n                        '%{value_formatted}',\n                        typeof value === 'number' ? RGraph.SVG.numberFormat({\n                            object:    opt.object,\n                            num:      value.toFixed(opt.object.properties.tooltipsFormattedDecimals),\n                            thousand: opt.object.properties.tooltipsFormattedThousand  || ',',\n                            point:    opt.object.properties.tooltipsFormattedPoint     || '.',\n                            prepend:  opt.object.properties.tooltipsFormattedUnitsPre  || '',\n                            append:   opt.object.properties.tooltipsFormattedUnitsPost || ''\n                        }) : null\n                    );\n                } else {\n                    text = text.replace('%{value}', value);\n                }\n            }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          ////////////////////////////////////////////////////////////////\n         // Do global substitution when there's an index to the global //\n        ////////////////////////////////////////////////////////////////\n        var reg = /%{global:([_a-z0-9.]+)\\[([0-9]+)\\]}/i;\n\n        while (text.match(reg)) {\n\n            var name  = RegExp.$1,\n                index = parseInt(RegExp.$2);\n\n            if (eval(name)) {\n                text = text.replace(\n                    reg,\n                    eval(name)[index] || ''\n                );\n\n            // Get rid of the text if there was nothing to replace the template bit with\n            } else {\n                text = text.replace(reg,'');\n            }\n                \n            RegExp.lastIndex = null;\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          //////////////////////////////////////////////////\n         // Do global substitution when there's no index //\n        //////////////////////////////////////////////////\n        var reg = /%{global:([_a-z0-9.]+)}/i;\n\n        while (text.match(reg)) {\n\n            var name = RegExp.$1;\n\n            if (eval(name)) {\n                text = text.replace(\n                    reg,\n                    eval(name) || ''\n                );\n\n            // Get rid of the text if there was nothing to replace the template bit with\n            } else {\n                text = text.replace(reg,'');\n            }\n                \n            RegExp.lastIndex = null;\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            // And lastly - call any functions\n            // MUST be last\n            var regexp = /%{function:([_A-Za-z0-9]+)\\((.*?)\\)}/;\n\n            // Temporarily replace carriage returns and line feeds with CR and LF\n            // so the the s option is not needed\n            text = text.replace(/\\r/,'|CR|');\n            text = text.replace(/\\n/,'|LF|');\n\n            while (text.match(regexp)) {\n\n                var str  = RegExp.$1 + '(' + RegExp.$2 + ')';\n                \n                for (var i=0,len=str.length; i<len; ++i) {\n                    str  = str.replace(/\\r?\\n/, \"\\\\n\");\n                }\n                \n                RGraph.SVG.REG.set('tooltip-templates-function-object', opt.object);\n\n                var func = new Function ('return ' + str);\n                var ret  = func();\n\n                text = text.replace(regexp, ret)\n            }\n\n            // Replace CR and LF with a space\n            text = text.replace(/\\|CR\\|/, ' ');\n            text = text.replace(/\\|LF\\|/, ' ');\n\n\n\n\n\n\n\n            \n            // Replace line returns with br tags\n            text = text.replace(/\\r?\\n/g, '<br />');\n            text = text.replace(/___--PERCENT--___/g, '%')\n\n\n            return text.toString();\n        }\n\n        // Save the original text on the tooltip\n        tooltipObj.__original_text__  = opt.text;\n\n        opt.text = substitute(opt.text);\n\n\n        // Add the pointer if requested. The background color is updated to match the\n        // tooltip a further down.\n        if (opt.object.properties.tooltipsPointer) {\n            opt.text += '<div id=\"RGraph_tooltipsPointer\"></div>';\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        tooltipObj.innerHTML  = opt.text;\n        tooltipObj.__text__   = opt.text; // This is set because the innerHTML can change when it's set\n        tooltipObj.id         = '__rgraph_tooltip_' + obj.id + '_' + obj.uid + '_'+  opt.index;\n        tooltipObj.__event__  = properties.tooltipsEvent || 'click';\n        tooltipObj.__object__ = obj;\n\n\n\n\n\n\n\n\n\n\n\n\n        // Add the index\n        if (typeof opt.index === 'number') {\n            tooltipObj.__index__ = opt.index;\n        }\n\n        // Add the dataset\n        if (typeof opt.dataset === 'number') {\n            tooltipObj.__dataset__ = opt.dataset;\n        }\n\n        // Add the group\n        if (typeof opt.group === 'number' || RGraph.SVG.isNull(opt.group)) {\n            tooltipObj.__group__ = opt.group;\n        }\n\n        // Add the sequentialIndex\n        if (typeof opt.sequentialIndex === 'number') {\n            tooltipObj.__sequentialIndex__ = opt.sequentialIndex;\n        }\n\n\n\n\n        // Add the tooltip to the document\n        document.body.appendChild(tooltipObj);\n\n\n\n\n\n\n\n\n\n// Set styles on the pointer. It's done this way\n// (not adding the style to the HTML above) to\n// prevent an error bein thrown should a\n// Content-Security-Policy header using style-src\n// be in place\nvar pointerObj = document.getElementById('RGraph_tooltipsPointer');\nif (pointerObj) {\n    var styles     = window.getComputedStyle(tooltipObj, false);\n    \n    pointerObj.style.backgroundColor = styles.backgroundColor;\n    pointerObj.style.color           = 'transparent';\n    pointerObj.style.position        = 'absolute';\n    pointerObj.style.bottom          = '-5px';\n    pointerObj.style.left            = '50%';\n    pointerObj.style.transform       = 'translateX(-50%) rotate(45deg)';\n    pointerObj.style.width           = '10px';\n    pointerObj.style.height          = '10px';\n}\n        \n        var width  = tooltipObj.offsetWidth,\n            height = tooltipObj.offsetHeight;\n\n\n\n        // Set these properties to 0 (ie an integer) in case chart libraries are missing\n        // default values for them\n        obj.properties.tooltipsOffsetx = obj.properties.tooltipsOffsetx || 0;\n        obj.properties.tooltipsOffsety = obj.properties.tooltipsOffsety || 0;\n\n        // Move the tooltip into position\n        tooltipObj.style.left = opt.event.pageX - (width / 2) + obj.properties.tooltipsOffsetx + 'px';\n        \n        // Prevent the top of the tooltip from being placed off the top of the page\n        var y = opt.event.pageY - height - 15;\n\n        if (y < 0) {\n            y = 5;\n        }\n\n        tooltipObj.style.top  = y + obj.properties.tooltipsOffsety + 'px';\n\n\n\n\n        //\n        // Set the width on the tooltip so it doesn't resize if the window is resized\n        //\n        tooltipObj.style.width = width + 'px';\n\n\n        //\n        // Now that the tooltip pointer has been added, determine the background-color and update\n        // the color of the pointer\n        if (opt.object.properties.tooltipsPointer) {\n\n            var styles = window.getComputedStyle(tooltipObj, false);\n            var pointer = document.getElementById('RGraph_tooltipsPointer');\n\n            pointer.style.backgroundColor = styles.backgroundColor;\n\n            // Add the pointer to the tooltip as a property\n            tooltipObj.__pointer__ = pointer;\n\n            // Facilitate the  property that allows CSS to be added to\n            // the tooltip key color blob\n            var tooltipsPointerCss = '';\n\n            if (opt.object.properties.tooltipsPointerCss) {\n            \n                var pointerDiv = document.getElementById('RGraph_tooltipsPointer');\n            \n                for(property in opt.object.properties.tooltipsPointerCss) {\n                    if (typeof property === 'string') {\n                        pointerDiv.style[property] = opt.object.properties.tooltipsPointerCss[property];\n                    }\n                }\n            }\n        }\n\n        // Fade the tooltip in if the tooltip is the first view\n        //if (!RGraph.SVG.REG.get('tooltip-lastx')) {\n        //    for (var i=0; i<=30; ++i) {\n        //        (function (idx)\n        //        {\n        //            setTimeout(function ()\n        //            {\n        //                tooltipObj.style.opacity = (idx / 30) * 1;\n        //            }, (idx / 30) * 200);\n        //        })(i);\n        //    }\n        //}\n\n\n\n\n        // If the left is less than zero - set it to 5\n        if (parseFloat(tooltipObj.style.left) <= 5) {\n            tooltipObj.style.left = 5 + obj.properties.tooltipsOffsetx + 'px';\n        }\n\n        // If the tooltip goes over the right hand edge then\n        // adjust the positioning\n        if (parseFloat(tooltipObj.style.left) + parseFloat(tooltipObj.style.width) > window.innerWidth) {\n            tooltipObj.style.left  = ''\n            tooltipObj.style.right = 5 + obj.properties.tooltipsOffsety + 'px'\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n        //\n        // Allow for static positioning. Support for this is limited at the moment\n        //\n        if (opt.object.properties.tooltipsPositionStatic && typeof opt.object.positionTooltipStatic === 'function') {\n\n            opt.object.positionTooltipStatic({\n                object:  opt.object,\n                event:   opt.event,\n                tooltip: tooltipObj,\n                index:   tooltipObj.__sequentialIndex__\n            });\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//\n// Move the tooltip and its pointer ifthey're off-screen LHS\n//\nif (parseInt(tooltipObj.style.left) < 0) {\n    var left  = parseInt(tooltipObj.style.left);\n    var width = parseInt(tooltipObj.style.width)\n\n    left = left + (width * 0.1 * 4);\n    \n    tooltipObj.style.left = left + 'px';\n    var pointer =  document.getElementById('RGraph_tooltipsPointer');\n\n    if (pointer) {\n        (function (pointer)\n        {\n            setTimeout(function ()\n            {\n                pointer.style.left = 'calc(10% + 5px)';\n            }, 1);\n        })(pointer);\n    }\n\n\n//\n// Move the tooltip and its pointer ifthey're off-screen RHS\n//\n} else if ( (parseInt(tooltipObj.style.left) + parseInt(tooltipObj.offsetWidth)) > document.body.offsetWidth) {\n    var left  = parseInt(tooltipObj.style.left);\n    var width = parseInt(tooltipObj.style.width)\n    \n    left = left - (width * 0.1 * 4);\n    \n    tooltipObj.style.left = left + 'px';\n    var pointer = document.getElementById('RGraph_tooltipsPointer');\n    \n    (function (pointer)\n    {\n        setTimeout(function ()\n        {\n            if (pointer) {\n                pointer.style.left = 'calc(90% - 5px)';\n            }\n        }, 1);\n    })(pointer);\n}\n\n\n\n\n\n\n\n        // If the canvas has fixed positioning then set the tooltip position to\n        // fixed too\n        if (RGraph.SVG.isFixed(obj.svg)) {\n            var scrollTop = window.scrollY || document.documentElement.scrollTop;\n\n            tooltipObj.style.position = 'fixed';\n            tooltipObj.style.top      = opt.event.pageY - scrollTop - height - 10 + obj.properties.tooltipsOffsety + 'px';\n        }\n\n\n\n        // Cancel the mousedown event\n        tooltipObj.onmousedown = function (e)\n        {\n            e.stopPropagation();\n        };\n\n        // Cancel the mouseup event\n        tooltipObj.onmouseup = function (e)\n        {\n            e.stopPropagation();\n        };\n\n        // Cancel the click event\n        tooltipObj.onclick  = function (e)\n        {\n            if (e.button == 0) {\n                e.stopPropagation();\n            }\n        };\n        \n        // Add the body click handler that clears the tooltip\n        document.body.addEventListener('mouseup', function (e)\n        {\n            RGraph.SVG.hideTooltip();\n        }, false);\n\n\n\n\n\n        //\n        // Keep a reference to the tooltip in the registry\n        //\n        RGraph.SVG.REG.set('tooltip', tooltipObj);\n        RGraph.SVG.REG.set('tooltip-lastx', parseFloat(tooltipObj.style.left));\n        RGraph.SVG.REG.set('tooltip-lasty', parseFloat(tooltipObj.style.top));\n\n\n        //\n        // Fire the tooltip event\n        //\n        RGraph.SVG.fireCustomEvent(obj, 'ontooltip');\n    };\n\n\n\n// End module pattern\n})(window, document);"],"names":[],"version":3,"file":"index.ecc5863a.js.map","sourceRoot":"/__parcel_source_root/"}