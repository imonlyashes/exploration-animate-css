{"mappings":"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","sources":["src/assets/scripts/RGraph.svg.common.core.js"],"sourcesContent":["'version:2022-09-11 (6.09)';\n//\n    // o--------------------------------------------------------------------------------o\n    // | This file is part of the RGraph package - you can learn more at:               |\n    // |                                                                                |\n    // |                         https://www.rgraph.net                                 |\n    // |                                                                                |\n    // | RGraph is licensed under the Open Source MIT license. That means that it's     |\n    // | totally free to use and there are no restrictions on what you can do with it!  |\n    // o--------------------------------------------------------------------------------o\n\n    RGraph        = window.RGraph || {isrgraph:true,isRGraph:true,rgraph:true};\n    RGraph.SVG    = RGraph.SVG    || {};\n    RGraph.SVG.FX = RGraph.SVG.FX || {};\n\n\n// Module pattern\n(function (win, doc, undefined)\n{\n    RGraph.SVG.REG = {\n        store: []\n    };\n    \n    // ObjectRegistry\n    RGraph.SVG.OR = {objects: []};\n    \n    // Used to categorise trigonometery functions\n    RGraph.SVG.TRIG        = {};\n    RGraph.SVG.TRIG.HALFPI = Math.PI * .4999;\n    RGraph.SVG.TRIG.PI     = RGraph.SVG.TRIG.HALFPI * 2;\n    RGraph.SVG.TRIG.TWOPI  = RGraph.SVG.TRIG.PI * 2;\n    \n    RGraph.SVG.events = [];\n\n\n    // This allows you to set globalconfiguration values that are copied to\n    // all objects automatically.\n    RGraph.SVG.GLOBALS = {};\n    \n    // This allows the GET import methods to be added\n    RGraph.SVG.GET = {};\n\n\n    RGraph.SVG.ISFF     = navigator.userAgent.indexOf('Firefox') != -1;\n    RGraph.SVG.ISOPERA  = navigator.userAgent.indexOf('Opera') != -1;\n    RGraph.SVG.ISCHROME = navigator.userAgent.indexOf('Chrome') != -1;\n    RGraph.SVG.ISSAFARI = navigator.userAgent.indexOf('Safari') != -1 && !RGraph.SVG.ISCHROME;\n    RGraph.SVG.ISWEBKIT = navigator.userAgent.indexOf('WebKit') != -1;\n\n    RGraph.SVG.ISIE     = navigator.userAgent.indexOf('Trident') > 0 || navigator.userAgent.indexOf('MSIE') > 0;\n    RGraph.SVG.ISIE9    = navigator.userAgent.indexOf('MSIE 9') > 0;\n    RGraph.SVG.ISIE10   = navigator.userAgent.indexOf('MSIE 10') > 0;\n    RGraph.SVG.ISIE11UP = navigator.userAgent.indexOf('MSIE') == -1 && navigator.userAgent.indexOf('Trident') > 0;\n    RGraph.SVG.ISIE10UP = RGraph.SVG.ISIE10 || RGraph.SVG.ISIE11UP;\n    RGraph.SVG.ISIE9UP  = RGraph.SVG.ISIE9 || RGraph.SVG.ISIE10UP;\n    \n    // Some commonly used bits of info\n    RGraph.SVG.MONTHS_SHORT = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n    RGraph.SVG.MONTHS_LONG  = ['January','February','March','April','May','June','July','August','September','October','November','December'];\n    RGraph.SVG.DAYS_SHORT   = ['Mon','Tue','Wed','Thu','Fri','Sat','Sun'];\n    RGraph.SVG.DAYS_LONG    = ['Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday'];\n\n\n\n\n\n\n\n\n    //\n    // Create an SVG tag\n    //\n    RGraph.SVG.createSVG = function (opt)\n    {\n        var container = opt.container,\n            obj       = opt.object;\n\n        if (container.__svg__) {\n            return container.__svg__;\n        }\n\n        var svg = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n            //svg.setAttribute('style', 'top: 0; left: 0; position: absolute');\n            svg.setAttribute('width', container.offsetWidth);\n            svg.setAttribute('height', container.offsetHeight);\n            svg.setAttribute('version', '1.1');\n            svg.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", 'xmlns', 'http://www.w3.org/2000/svg');\n            svg.setAttributeNS(\"http://www.w3.org/2000/xmlns/\", \"xmlns:xlink\", \"http://www.w3.org/1999/xlink\");\n            svg.__object__    = obj;\n            svg.__container__ = container;\n            \n            // Set some style\n            svg.style.top      = 0;\n            svg.style.left     = 0;\n            svg.style.position = 'absolute';\n\n        container.appendChild(svg);\n\n        container.__svg__    = svg;\n        container.__object__ = obj;\n\n        var style = getComputedStyle(container);\n        if (style.position !== 'absolute' && style.position !== 'fixed' && style.position !== 'sticky') {\n            container.style.position = 'relative';\n        }\n\n        // Add the groups that facilitate \"background layers\"\n\n        var numLayers = 10;\n\n        for (var i=1; i<=numLayers; ++i) {\n            \n            var group = RGraph.SVG.create({\n                svg: svg,\n                type: 'g',\n                attr: {\n                    className: 'background' + i\n                }\n            });\n\n            // Store a reference to the group\n            obj.layers['background' + i] = group;\n            svg['background' + i]        = group;\n        }\n        \n        // Add the group tag to the SVG that contains all of the elements\n        var group = RGraph.SVG.create({\n            svg: svg,\n            type: 'g',\n            attr: {\n                className: 'all-elements'\n            }\n        });\n\n        container.__svg__.all = group;\n\n        return svg;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Create a defs tag inside the SVG\n    //\n    RGraph.SVG.createDefs = function (obj)\n    {\n        if (!obj.svg.defs) {\n\n            var defs = RGraph.SVG.create({\n                svg: obj.svg,\n                type: 'defs'\n            });\n    \n            obj.svg.defs = defs;\n        }\n\n        return defs;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Creates a tag depending on the args that you give\n    //\n    //@param opt object The options for the function\n    //\n    RGraph.SVG.create = function (opt)\n    {\n        var ns  = \"http://www.w3.org/2000/svg\",\n            tag = doc.createElementNS(ns, opt.type);\n\n        // Add the attributes\n        for (var o in opt.attr) {\n            if (typeof o === 'string') {\n            \n                var name = o;\n\n                if (o === 'className') {\n                    name = 'class';\n                }\n                if ( (opt.type === 'a' || opt.type === 'image') && o === 'xlink:href') {\n                    tag.setAttributeNS('http://www.w3.org/1999/xlink', o, String(opt.attr[o]));\n                } else {\n                    if (RGraph.SVG.isNull(opt.attr[o])) {\n                        opt.attr[o] = '';\n                    }\n                    tag.setAttribute(name, String(opt.attr[o]));\n                }\n            }\n        }\n        \n        // Add the style\n        for (var o in opt.style) {\n            if (typeof o === 'string') {\n                tag.style[o] = String(opt.style[o]);\n            }\n        }\n\n        if (opt.parent) {\n            opt.parent.appendChild(tag);\n        } else {\n            opt.svg.appendChild(tag);\n        }\n\n        return tag;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Function that adds up all of the offsetLeft and offsetTops to get\n    // X/Y coords for the mouse\n    //\n    //@param object e The event object\n    //@return array   The X/Y coordinate pair representing the mouse\n    //                location in relation to the SVG tag.\n    //\n    RGraph.SVG.getMouseXY = function(e)\n    {\n        // This is necessary for IE9\n        if (!e.target) {\n            return;\n        }\n\n        var el      = e.target,\n            offsetX = 0,\n            offsetY = 0,\n            x,\n            y;\n\n\n        //if (typeof el.offsetParent !== 'undefined') { \n        //    do {\n        //        offsetX += el.offsetLeft;\n        //        offsetY += el.offsetTop;\n        //    } while ((el = el.offsetParent));\n        //}\n\n        //x = e.pageX;\n        //y = e.pageY;\n        x = e.offsetX;\n        y = e.offsetY;\n\n\n        x -= 2 * (parseInt(document.body.style.borderLeftWidth) || 0);\n        y -= 2 * (parseInt(document.body.style.borderTopWidth) || 0);\n\n        // We return a javascript array with x and y defined\n        return [x, y];\n    };\n\n\n\n\n\n\n\n\n    //\n    // Draws an X axis\n    //\n    //@param The chart object\n    //\n    RGraph.SVG.drawXAxis = function (obj)\n    {\n        var properties = obj.properties;\n\n        // Draw the axis\n        if (properties.xaxis) {\n\n            var y = obj.type === 'hbar' ? obj.height - properties.marginBottom : obj.getYCoord(obj.scale.min < 0 && obj.scale.max < 0 ? obj.scale.max : (obj.scale.min > 0 && obj.scale.max > 0 ? obj.scale.min : 0));\n\n            var axis = RGraph.SVG.create({\n                svg: obj.svg,\n                parent: obj.svg.all,\n                type: 'path',\n                attr: {\n                    d: 'M{1} {2} L{3} {4}'.format(\n                        properties.marginLeft,\n                        y,\n                        obj.width - properties.marginRight,\n                        y\n                    ),\n                    fill: properties.xaxisColor,\n                    stroke: properties.xaxisColor,\n                    'stroke-width': typeof properties.xaxisLinewidth === 'number' ? properties.xaxisLinewidth : 1,\n                    'shape-rendering': 'crispEdges',\n                    'stroke-linecap': 'square'\n                }\n            });\n\n\n            // HBar X axis\n            if (obj.type === 'hbar') {\n                var width  = obj.graphWidth / obj.data.length,\n                    x      = properties.marginLeft,\n                    startY = (obj.height - properties.marginBottom),\n                    endY   = (obj.height - properties.marginBottom) + properties.xaxisTickmarksLength;\n\n            // Line/Bar/Waterfall/Scatter X axis\n            } else {\n                var width  = obj.graphWidth / obj.data.length,\n                    x      = properties.marginLeft,\n                    startY = obj.getYCoord(0) - (properties.yaxisScaleMin < 0 ? properties.xaxisTickmarksLength : 0),\n                    endY   = obj.getYCoord(0) + properties.xaxisTickmarksLength;\n                    \n                if (obj.scale.min < 0 && obj.scale.max <= 0) {\n                    startY = properties.marginTop;\n                    endY   = properties.marginTop - properties.xaxisTickmarksLength;\n                }\n\n                if (obj.scale.min > 0 && obj.scale.max > 0) {\n                    startY = obj.getYCoord(obj.scale.min);\n                    endY   = obj.getYCoord(obj.scale.min) + properties.xaxisTickmarksLength;\n                }\n\n                if (obj.mirrorScale) {\n                    startY = obj.height / 2 -  properties.xaxisTickmarksLength;\n                    endY   = obj.height / 2 + properties.xaxisTickmarksLength;\n                }\n            }\n\n\n\n\n\n\n\n\n\n\n\n\n            // Draw the tickmarks\n            if (properties.xaxisTickmarks) {\n\n                // The HBar uses a scale\n                if (properties.xaxisScale) {\n                \n                    var zeroXCoord = obj.getXCoord(0);\n                    var xmincoord  = obj.getXCoord(obj.min);\n\n                    for (var i=0; i<(typeof properties.xaxisLabelsPositionEdgeTickmarksCount === 'number' ? properties.xaxisLabelsPositionEdgeTickmarksCount : (obj.scale.numlabels + (properties.yaxis && properties.xaxisScaleMin === 0 ? 0 : 1))); ++i) {\n\n                        if (obj.type === 'hbar') {\n                            var dataPoints = obj.data.length;\n                        }\n                    \n                        x = properties.marginLeft + ((i+(properties.yaxis && properties.xaxisScaleMin === 0 && properties.yaxisPosition === 'left' ? 1 : 0)) * (obj.graphWidth / obj.scale.numlabels));\n\n                        // Allow Manual specification of number of tickmarks\n                        if (typeof properties.xaxisLabelsPositionEdgeTickmarksCount === 'number') {\n                            dataPoints = properties.xaxisLabelsPositionEdgeTickmarksCount;\n                            var gap    = (obj.graphWidth / properties.xaxisLabelsPositionEdgeTickmarksCount );\n                            x          = (gap * i) + properties.marginLeft + gap;\n                            \n                            // Allow for the Y axis being on the right so the tickmarks\n                            // have to be adjusted\n                            if (properties.yaxisPosition === 'right') {\n                                x -= gap;\n                            }\n                        }\n                        \n                        // Don't draw a tick at the zero position\n                        if (\n                                properties.yaxis\n                            && (x < (zeroXCoord + 2) && x > (zeroXCoord - 2))\n                           ) {\n                            continue;\n                        }\n                        \n\n                        \n                        // Don't draw a tick at the zero position (another case)\n                        if (\n                                properties.yaxis\n                            && obj.min > 0\n                            && obj.max > obj.min\n                            && i === 0\n                           ) {\n                            continue;\n                        }\n                        \n                        // Don't draw a tick at the zero position (another case)\n                        if (\n                                properties.yaxis\n                            && obj.max < 0\n                            && obj.min < obj.max\n                            && i === 5\n                           ) {\n                            continue;\n                        }\n\n                        RGraph.SVG.create({\n                            svg: obj.svg,\n                            parent: obj.svg.all,\n                            type: 'path',\n                            attr: {\n                                d: 'M{1} {2} L{3} {4}'.format(\n                                    x,\n                                    startY,\n                                    x,\n                                    endY\n                                ),\n                                stroke: properties.xaxisColor,\n                                'stroke-width': typeof properties.xaxisLinewidth === 'number' ? properties.xaxisLinewidth : 1,\n                                'shape-rendering': \"crispEdges\"\n                            }\n                        });\n                        \n                    }\n\n                    // Draw an extra tickmark in some conditions. This\n                    // is a bit of a edge-case\n                    if (   properties.yaxisPosition === 'right'\n                        && properties.xaxisScaleMin < 0\n                        && properties.xaxisScaleMax > 0\n                       ) {\n\n\n                        RGraph.SVG.create({\n                            svg: obj.svg,\n                            parent: obj.svg.all,\n                            type: 'path',\n                            attr: {\n                                d: 'M{1} {2} L{3} {4}'.format(\n                                    obj.width - properties.marginRight,\n                                    startY,\n                                    obj.width - properties.marginRight,\n                                    endY\n                                ),\n                                stroke: properties.xaxisColor,\n                                'stroke-width': typeof properties.xaxisLinewidth === 'number' ? properties.xaxisLinewidth : 1,\n                                'shape-rendering': \"crispEdges\"\n                            }\n                        });\n                    }\n\n\n\n                } else {\n\n                    // This style is used by Bar and Scatter charts\n                    if (properties.xaxisLabelsPosition === 'section') {\n\n                        if (obj.type === 'bar' || obj.type === 'waterfall') {\n                            var dataPoints = obj.data.length;\n                        } else if (obj.type === 'line'){\n                            var dataPoints = obj.data[0].length;\n                        } else if (obj.type === 'scatter') {\n                            var dataPoints = properties.xaxisLabels ? properties.xaxisLabels.length : 10;\n                        }\n                        \n                        // Allow Manual specification of number of tickmarks\n                        if (typeof properties.xaxisLabelsPositionSectionTickmarksCount === 'number') {\n                            dataPoints = properties.xaxisLabelsPositionSectionTickmarksCount;\n                        }\n\n                        for (var i=0; i<dataPoints; ++i) {\n        \n                            // Allow for a right hand Y axis so move the tickmarks to the left\n                            if (properties.yaxisPosition === 'right') {\n                                x = properties.marginLeft + (properties.marginInnerLeft || 0) + (i * ( (obj.graphWidth - (properties.marginInnerLeft || 0) - (properties.marginInnerRight || 0) ) / dataPoints));\n                            } else {\n                                x = properties.marginLeft + (properties.marginInnerLeft || 0) + ((i+1) * ( (obj.graphWidth - (properties.marginInnerLeft || 0) - (properties.marginInnerRight || 0) ) / dataPoints));\n                            }\n\n\n                            RGraph.SVG.create({\n                                svg: obj.svg,\n                                parent: obj.svg.all,\n                                type: 'path',\n                                attr: {\n                                    d: 'M{1} {2} L{3} {4}'.format(\n                                        x + 0.001,\n                                        startY,\n                                        x,\n                                        endY\n                                    ),\n                                    stroke: properties.xaxisColor,\n                                    'stroke-width': typeof properties.xaxisLinewidth === 'number' ? properties.xaxisLinewidth : 1,\n                                    'shape-rendering': \"crispEdges\"\n                                }\n                            });\n                        }\n                        \n                        \n                        // Draw an extra tickmark if the X axis is on the right but not being shown\n                        if (properties.yaxisPosition === 'right' && !properties.yaxis) {\n                            RGraph.SVG.create({\n                                svg: obj.svg,\n                                parent: obj.svg.all,\n                                type: 'path',\n                                attr: {\n                                    d: 'M{1} {2} L{3} {4}'.format(\n                                        obj.width - properties.marginRight  + 0.001,\n                                        startY,\n                                        obj.width - properties.marginRight  + 0.001,\n                                        endY\n                                    ),\n                                    stroke: properties.xaxisColor,\n                                    'stroke-width': typeof properties.xaxisLinewidth === 'number' ? properties.xaxisLinewidth : 1,\n                                    'shape-rendering': \"crispEdges\"\n                                }\n                            });\n                        }\n\n                    // This style is used by line charts\n                    } else if (properties.xaxisLabelsPosition === 'edge') {\n\n                        if (typeof properties.xaxisLabelsPositionEdgeTickmarksCount === 'number') {\n                            var len = properties.xaxisLabelsPositionEdgeTickmarksCount;\n                        } else {\n                            var len = obj.data && obj.data[0] && obj.data[0].length ? obj.data[0].length : 0;\n                        }\n    \n                        for (var i=0; i<len; ++i) {\n\n                            var gap = ( (obj.graphWidth) / (len - 1));\n\n                            if (properties.yaxisPosition === 'right') {\n                                x = properties.marginLeft + (i * gap);\n\n                                // If the X position is within 3 pixels of the X position of the Y\n                                // axis then skip it\n                                if (properties.yaxis && x > (obj.width - properties.marginRight - 3) && x < (obj.width - properties.marginRight + 3)) {\n                                    continue;\n                                }\n                            } else {\n                                x = properties.marginLeft + ((i+1) * gap);\n                            }\n                            \n                            // For some reason a tickmark is being drawn in the right margin\n                            // so this prevents that.\n                            if ( (!properties.yaxisPosition || properties.yaxisPosition === 'left') && x > (obj.width - properties.marginRight)) {\n                                continue;\n                            }\n                            RGraph.SVG.create({\n                                svg: obj.svg,\n                                parent: obj.svg.all,\n                                type: 'path',\n                                attr: {\n                                    d: 'M{1} {2} L{3} {4}'.format(\n                                        x + 0.001,\n                                        startY,\n                                        x,\n                                        endY\n                                    ),\n                                    stroke: properties.xaxisColor,\n                                    'stroke-width': typeof properties.xaxisLinewidth === 'number' ? properties.xaxisLinewidth : 1,\n                                    'shape-rendering': \"crispEdges\"\n                                }\n                            });\n                        }\n                    }\n                }\n\n\n\n\n\n\n                // Draw an extra tick if the Y axis is not being shown\n                if (properties.yaxis === false || (properties.marginInnerLeft || 0) > 0) {\n                    RGraph.SVG.create({\n                        svg: obj.svg,\n                        parent: obj.svg.all,\n                        type: 'path',\n                        attr: {\n                            d: 'M{1} {2} L{3} {4}'.format(\n                                properties.marginLeft + (properties.marginInnerLeft || 0) + 0.001,\n                                startY,\n                                properties.marginLeft + (properties.marginInnerLeft || 0),\n                                endY\n                            ),\n                            stroke: obj.properties.xaxisColor,\n                            'stroke-width': typeof properties.xaxisLinewidth === 'number' ? properties.xaxisLinewidth : 1,\n                            'shape-rendering': \"crispEdges\",\n                            parent: obj.svg.all,\n                        }\n                    });\n                }\n            }\n\n\n\n\n\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n        \n        // Get the text configuration\n        var textConf = RGraph.SVG.getTextConf({\n            object: obj,\n            prefix: 'xaxisLabels'\n        });\n\n        //\n        // Draw an X axis scale\n        //\n        if (properties.xaxisScale) {\n\n            if (obj.type === 'scatter') {\n                obj.xscale = RGraph.SVG.getScale({\n                    object:    obj,\n                    numlabels: properties.xaxisLabelsCount,\n                    unitsPre:  properties.xaxisScaleUnitsPre,\n                    unitsPost: properties.xaxisScaleUnitsPost,\n                    max:       properties.xaxisScaleMax,\n                    min:       properties.xaxisScaleMin,\n                    point:     properties.xaxisScalePoint,\n                    round:     properties.xaxisScaleRound,\n                    thousand:  properties.xaxisScaleThousand,\n                    decimals:  properties.xaxisScaleDecimals,\n                    strict:    typeof properties.xaxisScaleMax === 'number',\n                    formatter: properties.xaxisScaleFormatter\n                });\n                \n                \n                \n                \n                \n                \n                \n                var segment = obj.graphWidth / properties.xaxisLabelsCount\n                \n                for (var i=0; i<obj.xscale.labels.length; ++i) {\n                \n                    var x = properties.marginLeft + (segment * i) + segment + properties.xaxisLabelsOffsetx;\n                    var y = (obj.height - properties.marginBottom) + (properties.xaxis ? properties.xaxisTickmarksLength + 6 : 10) + (properties.xaxisLinewidth || 1) + properties.xaxisLabelsOffsety;\n                \n                    RGraph.SVG.text({\n                        \n                        object: obj,\n                        parent: obj.svg.all,\n                        tag:    'labels.xaxis',\n                        \n                        text:   obj.xscale.labels[i],\n                        \n                        x:      x,\n                        y:      y,\n                        \n                        halign: 'center',\n                        valign: 'top',\n\n                        font:   textConf.font,\n                        size:   textConf.size,\n                        bold:   textConf.bold,\n                        italic: textConf.italic,\n                        color:  textConf.color\n                    });\n                }\n                \n                \n                \n                \n\n                // Add the minimum label if labels are enabled\n                if (properties.xaxisLabelsCount > 0) {\n                    var y   = obj.height - properties.marginBottom + properties.xaxisLabelsOffsety + (properties.xaxis ? properties.xaxisTickmarksLength + 6 : 10),\n                        str = RGraph.SVG.numberFormat({\n                            object:     obj,\n                            num:        properties.xaxisScaleMin.toFixed(properties.xaxisScaleDecimals),\n                            prepend:    properties.xaxisScaleUnitsPre,\n                            append:     properties.xaxisScaleUnitsPost,\n                            point:      properties.xaxisScalePoint,\n                            thousand:   properties.xaxisScaleThousand,\n                            formatter:  properties.xaxisScaleFormatter\n                        });\n\n                    var text = RGraph.SVG.text({\n                        \n                        object: obj,\n                        parent: obj.svg.all,\n                        tag:    'labels.xaxis',\n                        \n                        text: typeof properties.xaxisScaleFormatter === 'function' ? (properties.xaxisScaleFormatter)(this, properties.xaxisScaleMin) : str,\n                        \n                        x: properties.marginLeft + properties.xaxisLabelsOffsetx,\n                        y: y,\n                        \n                        halign: 'center',\n                        valign: 'top',\n\n                        font:   textConf.font,\n                        size:   textConf.size,\n                        bold:   textConf.bold,\n                        italic: textConf.italic,\n                        color:  textConf.color\n                    });\n                }\n            \n            \n            // =========================================================================\n            } else {\n\n                var segment = obj.graphWidth / properties.xaxisLabelsCount,\n                    scale   = obj.scale;\n\n                for (var i=0; i<scale.labels.length; ++i) {\n\n                    var x = properties.marginLeft + (segment * i) + segment + properties.xaxisLabelsOffsetx;\n                    var y = (obj.height - properties.marginBottom) + (properties.xaxis ? properties.xaxisTickmarksLength + 6 : 10) + (properties.xaxisLinewidth || 1) + properties.xaxisLabelsOffsety;\n\n                    // If the Y axis is positioned on the RHS then the\n                    // labels should be reversed (HBar)\n                    if (   (obj.type === 'hbar' || (obj.type === 'scatter' && properties.xaxis))\n                        && properties.yaxisPosition === 'right'\n                       ) {\n                        x = obj.width - properties.marginRight - (segment * i) - segment + properties.xaxisLabelsOffsetx;\n                    }\n\n                    RGraph.SVG.text({\n                        \n                        object: obj,\n                        parent: obj.svg.all,\n                        \n                        text:   obj.scale.labels[i],\n                        x:      x,\n                        y:      y,\n                        halign: 'center',\n                        valign: 'top',\n                        \n                        tag:    'labels.xaxis',\n                        \n                        font:   textConf.font,\n                        size:   textConf.size,\n                        bold:   textConf.bold,\n                        italic: textConf.italic,\n                        color:  textConf.color\n                    });\n                }\n                \n                \n                \n                \n    \n                // Add the minimum label if labels are enabled\n                if (properties.xaxisLabelsCount > 0) {\n                    var y   = obj.height - properties.marginBottom + properties.xaxisLabelsOffsety + (properties.xaxis ? properties.xaxisTickmarksLength + 6 : 10),\n                        str = RGraph.SVG.numberFormat({\n                            object:     obj,\n                            num:        properties.xaxisScaleMin.toFixed(properties.xaxisScaleDecimals),\n                            prepend:    properties.xaxisScaleUnitsPre,\n                            append:     properties.xaxisScaleUnitsPost,\n                            point:      properties.xaxisScalePoint,\n                            thousand:   properties.xaxisScaleThousand,\n                            formatter:  properties.xaxisScaleFormatter\n                        });\n\n                    var text = RGraph.SVG.text({\n                        \n                        object: obj,\n                        parent: obj.svg.all,\n                        tag:    'labels.xaxis',\n                        \n                        text: typeof properties.xaxisScaleFormatter === 'function' ? (properties.xaxisScaleFormatter)(this, properties.xaxisScaleMin) : str,\n\n                        x: properties.yaxisPosition === 'right' ? obj.width - properties.marginRight + properties.xaxisLabelsOffsetx : properties.marginLeft + properties.xaxisLabelsOffsetx,\n                        y: y,\n                        \n                        halign: 'center',\n                        valign: 'top',\n                        \n                        font:   textConf.font,\n                        size:   textConf.size,\n                        bold:   textConf.bold,\n                        italic: textConf.talic,\n                        color:  textConf.color\n                    });\n                }\n            }\n\n        //\n        // Draw the X axis labels\n        //\n        } else {\n            if (typeof properties.xaxisLabels === 'object' && !RGraph.SVG.isNull(properties.xaxisLabels) ) {\n            \n                var angle = properties.xaxisLabelsAngle;\n\n                // Loop through the X labels\n                if (properties.xaxisLabelsPosition === 'section') {\n                \n                    var segment = (obj.width - properties.marginLeft - properties.marginRight - (properties.marginInnerLeft || 0) - (properties.marginInnerRight || 0) ) / properties.xaxisLabels.length;\n                \n                    for (var i=0; i<properties.xaxisLabels.length; ++i) {\n                    \n                        var x = properties.marginLeft + (properties.marginInnerLeft || 0) + (segment / 2) + (i * segment);\n\n                        if (obj.scale.max <=0 && obj.scale.min < obj.scale.max) {\n                            var y = properties.marginTop - (RGraph.SVG.ISFF ? 5 : 10)  - (properties.xaxisLinewidth || 1) + properties.xaxisLabelsOffsety;\n                            var valign = 'bottom';\n                        } else {\n                            var y = obj.height - properties.marginBottom + (RGraph.SVG.ISFF ? 5 : 10) + (properties.xaxisLinewidth || 1) + properties.xaxisLabelsOffsety;\n                            var valign = 'top';\n                        }\n\n                        RGraph.SVG.text({\n                            \n                            object: obj,\n                            parent: obj.svg.all,\n                            tag:    'labels.xaxis',\n                            \n                            text: properties.xaxisLabels[i],\n                            \n                            x: x + properties.xaxisLabelsOffsetx,\n                            y: y,\n                            \n                            valign: (typeof angle === 'number' && angle) ? 'center' : valign,\n                            halign: (typeof angle === 'number' && angle) ? 'right' : 'center',\n\n                            angle: angle,\n\n                            size:   textConf.size,\n                            italic: textConf.italic,\n                            font:   textConf.font,\n                            bold:   textConf.bold,\n                            color:  textConf.color\n                        });\n                    }\n\n                } else if (properties.xaxisLabelsPosition === 'edge') {\n    \n                    if (obj.type === 'line') {\n                        var hmargin = properties.marginInner;\n                    } else {\n                        var hmargin = 0;\n                    }\n    \n    \n    \n                    var segment = (obj.graphWidth - hmargin - hmargin) / (properties.xaxisLabels.length - 1);\n\n                    for (var i=0; i<properties.xaxisLabels.length; ++i) {\n                    \n                        var x = properties.marginLeft + (i * segment) + hmargin;\n\n                        if (obj.scale.max <= 0 && obj.scale.min < 0) {\n                            valign = 'bottom';\n                            y = properties.marginTop - (RGraph.SVG.ISFF ? 5 : 10) - (properties.xaxisTickmarksLength - 5)  - (properties.xaxisLinewidth || 1) + properties.xaxisLabelsOffsety\n                        } else {\n                            valign = 'top';\n                            y = obj.height - properties.marginBottom + (RGraph.SVG.ISFF ? 5 : 10) + (properties.xaxisTickmarksLength - 5) + (properties.xaxisLinewidth || 1) + properties.xaxisLabelsOffsety;\n                        }\n                    \n                        RGraph.SVG.text({\n\n                            object: obj,\n                            parent: obj.svg.all,\n                            tag:    'labels.xaxis',\n\n                            text: properties.xaxisLabels[i],\n\n                            x: x + properties.xaxisLabelsOffsetx,\n                            y: y,\n\n                            valign: (typeof angle === 'number' && angle) ? 'center' : valign,\n                            halign: (typeof angle === 'number' && angle) ? 'right' : 'center',\n\n                            angle: angle,\n\n                            size:   textConf.size,\n                            italic: textConf.italic,\n                            font:   textConf.font,\n                            bold:   textConf.bold,\n                            color:  textConf.color\n                        });\n                    }\n                }\n            }\n        }\n\n    // Save this so that it can be used for the title\n    var labelsY = y + properties.xaxisLabelsOffsety;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        //\n        // DRAW THE TITLE\n        //\n        if (properties.xaxisTitle) {\n\n            // Get the size of the X axis labels\n            var textConf_labels = RGraph.SVG.getTextConf({\n                object: obj,\n                prefix: obj.type === 'hbar' ? 'yaxisLabels' : 'xaxisLabels'\n            });\n\n            var x = properties.marginLeft + ((obj.width - properties.marginLeft - properties.marginRight) / 2) + (properties.xaxisTitleOffsetx || 0);\n            var y = labelsY + (textConf_labels.size * 1.5);\n\n            \n            // Get the size of the X axis title\n            //if (properties.xaxisScale || (properties.xaxisLabels && properties.xaxisLabels.length) ) {\n            var textConf = RGraph.SVG.getTextConf({\n                object: obj,\n                prefix: 'xaxisTitle'\n            });\n            //}\n\n\n            // Specific X and Y coordinates for the title\n            if (typeof properties.xaxisTitleX === 'number') x = properties.xaxisTitleX;\n            if (typeof properties.xaxisTitleY === 'number') y = properties.xaxisTitleY;\n\n            RGraph.SVG.text({\n                object: obj,\n                parent: obj.svg.all,\n                tag:    'xaxisTitle',\n                \n                text:   String(properties.xaxisTitle),\n                \n                x:      x + (properties.xaxisTitleOffsetx || 0),\n                y:      y + (properties.xaxisTitleOffsety || 0),\n\n                valign: typeof properties.xaxisTitleValign === 'string' ? properties.xaxisTitleValign : 'top',\n                halign: typeof properties.xaxisTitleHalign === 'string' ? properties.xaxisTitleHalign : 'center',\n                \n                size:   textConf.size,\n                italic: textConf.italic,\n                font:   textConf.font,\n                bold:   textConf.bold,\n                color:  textConf.color\n            });\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Draws an Y axis\n    //\n    //@param The chart object\n    //\n    RGraph.SVG.drawYAxis = function (obj)\n    {\n        var properties = obj.properties;\n\n        if (properties.yaxis) {\n\n            // The X coordinate that the Y axis is positioned at\n            if (obj.type === 'hbar') {\n                \n                var x = obj.getXCoord(properties.xaxisScaleMin > 0 ? properties.xaxisScaleMin : 0);\n    \n                if (properties.xaxisScaleMin < 0 && properties.xaxisScaleMax <= 0) {\n                    x = obj.getXCoord(properties.xaxisScaleMax);\n                }\n            } else {\n                if (properties.yaxisPosition === 'right') {\n                    var x = obj.width - properties.marginRight;\n                } else {\n                    var x = properties.marginLeft;\n                }\n            }\n\n\n            var axis = RGraph.SVG.create({\n                svg: obj.svg,\n                parent: obj.svg.all,\n                type: 'path',\n                attr: {\n                    d: 'M{1} {2} L{3} {4}'.format(\n                        x,\n                        properties.marginTop,\n                        x,\n                        obj.height - properties.marginBottom\n                    ),\n                    stroke: properties.yaxisColor,\n                    fill: properties.yaxisColor,\n                    'stroke-width': typeof properties.yaxisLinewidth === 'number' ? properties.yaxisLinewidth : 1,\n                    'shape-rendering': \"crispEdges\",\n                    'stroke-linecap': 'square'\n                }\n            });\n\n    \n    \n    \n\n    \n\n            if (obj.type === 'hbar') {\n\n                var height = (obj.graphHeight - properties.marginInnerTop - properties.marginInnerBottom) / (properties.yaxisLabels.length || properties.yaxisTickmarksCount),\n                    y      = properties.marginTop + properties.marginInnerTop,\n                    len    = properties.yaxisLabels.length,\n                    startX = obj.getXCoord(0) + (properties.xaxisScaleMin < 0 ? properties.yaxisTickmarksLength : 0),\n                    endX   = obj.getXCoord(0) - properties.yaxisTickmarksLength;\n\n                // Now change the startX/endX if the Y axisPosition is right\n                if (properties.yaxisPosition == 'right') {\n                    startX = obj.getXCoord(0) + (properties.xaxisScaleMax > 0 && properties.xaxisScaleMin < 0 ? -3 : 0);\n                    endX   = obj.getXCoord(0) + properties.yaxisTickmarksLength;\n                }\n\n                // Edge case\n                if (properties.xaxisScaleMin < 0 && properties.xaxisScaleMax <=0) {\n                    startX = obj.getXCoord(properties.xaxisScaleMax);\n                    endX   = obj.getXCoord(properties.xaxisScaleMax) + 5;\n                }\n\n                // Edge case\n                if (properties.xaxisScaleMin > 0 && properties.xaxisScaleMax > properties.xaxisScaleMin && properties.yaxisPosition === 'left') {\n                    startX = obj.getXCoord(properties.xaxisScaleMin);\n                    endX   = obj.getXCoord(properties.xaxisScaleMin) -3;\n                }\n                \n                // A custom number of tickmarks\n                if (typeof properties.yaxisLabelsPositionSectionTickmarksCount === 'number') {\n                    len    = properties.yaxisLabelsPositionSectionTickmarksCount;\n                    height = (obj.graphHeight - properties.marginInnerTop - properties.marginInnerBottom) / len;\n                }\n\n\n\n\n\n\n\n\n                //\n                // Draw the tickmarks\n                //\n                if (properties.yaxisTickmarks) {\n\n                    for (var i=0; i<(len || properties.yaxisTickmarksCount); ++i) {\n\n                        // Draw the Y axis tickmarks for the HBar\n                        var tick = RGraph.SVG.create({\n                            svg: obj.svg,\n                            parent: obj.svg.all,\n                            type: 'path',\n                            attr: {\n                                d: 'M{1} {2} L{3} {4}'.format(\n                                    startX,\n                                    y,\n                                    endX,\n                                    y + 0.001\n                                ),\n                                stroke: properties.yaxisColor,\n                                'stroke-width': typeof properties.yaxisLinewidth === 'number' ? properties.yaxisLinewidth : 1,\n                                'shape-rendering': \"crispEdges\"\n                            }\n                        });\n\n                        y += height;\n                    }\n    \n    \n                    // Draw an extra tick if the X axis position is not zero or\n                    // if the xaxis is not being shown\n                    if (properties.xaxis === false) {\n\n                        if (obj.type === 'hbar' && properties.xaxisScaleMin <= 0 && properties.xaxisScaleMax < 0) {\n                            var startX = obj.getXCoord(properties.xaxisScaleMax);\n                            var endX   = obj.getXCoord(properties.xaxisScaleMax) + properties.yaxisTickmarksLength;\n\n                        } else {\n                            var startX = obj.getXCoord(0) - properties.yaxisTickmarksLength;\n                            var endX   = obj.getXCoord(0) + (properties.xaxisScaleMin < 0 ? properties.yaxisTickmarksLength : 0);\n\n                            if (properties.yaxisPosition === 'right') {\n                                var startX = obj.getXCoord(0) - (obj.scale.min === 0 && !obj.mirrorScale ? 0 : properties.yaxisTickmarksLength);\n                                var endX   = obj.getXCoord(0) + properties.yaxisTickmarksLength;\n                            }\n                        }\n\n                        var axis = RGraph.SVG.create({\n                            svg: obj.svg,\n                            parent: obj.svg.all,\n                            type: 'path',\n                            attr: {\n                                d: 'M{1} {2} L{3} {4}'.format(\n                                    startX,\n                                    Math.round(obj.height - properties.marginBottom - parseFloat(properties.marginInnerBottom)),\n\n                                    endX,\n                                    Math.round(obj.height - properties.marginBottom - parseFloat(properties.marginInnerBottom))\n                                ),\n                                stroke: obj.properties.yaxisColor,\n                                'stroke-width': typeof properties.yaxisLinewidth === 'number' ? properties.yaxisLinewidth : 1,\n                                'shape-rendering': \"crispEdges\"\n                            }\n                        });\n                    }\n                }\n\n\n\n\n\n\n\n            //\n            // Bar, Line etc types of chart\n            //\n            } else {\n\n                var height = obj.graphHeight / properties.yaxisLabelsCount,\n                    y      = properties.marginTop,\n                    len    = properties.yaxisLabelsCount,\n                    startX = properties.marginLeft,\n                    endX   = properties.marginLeft - properties.yaxisTickmarksLength;\n\n                // Adjust the startX and endX positions for when the Y axis is\n                // on the RHS\n                if (properties.yaxisPosition === 'right') {\n                    startX = obj.width - properties.marginRight;\n                    endX   = startX + properties.yaxisTickmarksLength;\n                }\n\n                // A custom number of tickmarks\n                if (typeof properties.yaxisLabelsPositionEdgeTickmarksCount === 'number') {\n                    len    = properties.yaxisLabelsPositionEdgeTickmarksCount;\n                    height = obj.graphHeight / len;\n                }\n\n                //\n                // Draw the tickmarks\n                //\n                if (properties.yaxisTickmarks) {\n\n                \n                    for (var i=0; i<len; ++i) {\n                        \n                        //var zeropoint = obj.getYCoord(obj.min);\n                        \n                        // Egde case\n                        if ( \n                               !(obj.max <= 0 && obj.min < obj.max && y === obj.properties.marginTop)\n                            && !(obj.min < 0 && obj.max > 0 && y <= (obj.getYCoord(0) + 1) && y >= (obj.getYCoord(0) - 1) )\n                           ) {\n    \n                            // Avoid a tickmark at zero                        \n                            //if (y > (zeropoint - 2) && y < (zeropoint + 2) && i === 0) {\n                            //    y += height;\n                            //    continue;\n                            //}\n    \n                            // Draw the axis\n                            var axis = RGraph.SVG.create({\n                                svg: obj.svg,\n                                parent: obj.svg.all,\n                                type: 'path',\n                                attr: {\n                                    d: 'M{1} {2} L{3} {4}'.format(\n                                        startX,\n                                        y,\n                                        endX,\n                                        y\n                                    ),\n                                    stroke: properties.yaxisColor,\n                                    'stroke-width': typeof properties.yaxisLinewidth === 'number' ? properties.yaxisLinewidth : 1,\n                                    'shape-rendering': \"crispEdges\"\n                                }\n                            });\n                        }\n                        \n                        y += height;\n                    }\n    \n    \n                    // Draw an extra tick if the X axis position is not zero or\n                    // if the xaxis is not being shown\n                    if (    (properties.yaxisScaleMin !== 0 || properties.xaxis === false || obj.mirrorScale)\n                        && !(obj.scale.min > 0 && obj.scale.max > 0) ) {\n                        \n                        // Adjust the startX and endX positions for when the Y axis is\n                        // on the RHS\n                        if (properties.yaxisPosition === 'right') {\n                            startX = obj.width - properties.marginRight;\n                            endX   = startX + properties.yaxisTickmarksLength;\n                        }\n\n                        var axis = RGraph.SVG.create({\n                            svg: obj.svg,\n                            parent: obj.svg.all,\n                            type: 'path',\n                            attr: {\n                                d: 'M{1} {2} L{3} {4}'.format(\n                                    startX,\n                                    obj.height - properties.marginBottom,\n                                    endX,\n                                    obj.height - properties.marginBottom\n                                ),\n                                stroke: properties.yaxisColor,\n                                'stroke-width': typeof properties.yaxisLinewidth === 'number' ? properties.yaxisLinewidth : 1,\n                                'shape-rendering': \"crispEdges\"\n                            }\n                        });\n                    }\n                }\n            }\n        }\n\n\n\n        // Get the text configuration\n        var textConf = RGraph.SVG.getTextConf({\n            object: obj,\n            prefix: 'yaxisLabels'\n        });\n\n\n        //\n        // Draw the Y axis labels\n        //\n        if (properties.yaxisScale) {\n\n            var segment = (obj.height - properties.marginTop - properties.marginBottom) / properties.yaxisLabelsCount;\n\n            for (var i=0; i<obj.scale.labels.length; ++i) {\n\n                var y = obj.height - properties.marginBottom - (segment * i) - segment;\n\n                RGraph.SVG.text({\n                    \n                    object: obj,\n                    parent: obj.svg.all,\n                    tag:    'labels.yaxis',\n                    \n                    text:   obj.scale.labels[i],\n\n                    x:      properties.yaxisPosition === 'right'\n                                ? (obj.width - properties.marginRight + 7 + (properties.yaxis ? (properties.yaxisTickmarksLength - 3) : 0) + properties.yaxisLabelsOffsetx)\n                                : (properties.marginLeft - 7 - (properties.yaxis ? (properties.yaxisTickmarksLength - 3) : 0) + properties.yaxisLabelsOffsetx),\n                    y:      y + properties.yaxisLabelsOffsety,\n\n                    halign: properties.yaxisLabelsHalign || (properties.yaxisPosition === 'right' ? 'left' : 'right'),\n                    valign: properties.yaxisLabelsValign || 'center',\n                    \n                    font:   textConf.font,\n                    size:   textConf.size,\n                    bold:   textConf.bold,\n                    italic: textConf.italic,\n                    color:  textConf.color\n                });\n            }\n\n\n\n\n            //\n            // Add the minimum label\n            //\n            var y   = obj.height - properties.marginBottom,\n                // Changed this to use obj.scale.min instead of properties.yaxisScaleMin\n                // on 11/11/18 because mirrored scales had zero as the bottom\n                // value when it should have been a mirror of the top value\n                str = (properties.yaxisScaleUnitsPre + obj.scale.min.toFixed(properties.yaxisScaleDecimals).replace(/\\./, properties.yaxisScalePoint) + properties.yaxisScaleUnitsPost);\n                \n            // Fix a bugettte that's showing the - sign after the unitsPre - should\n            // be showing them before\n            str = str.replace(properties.yaxisScaleUnitsPre + '-', '-' + properties.yaxisScaleUnitsPre);\n\n            var text = RGraph.SVG.text({\n                \n                object: obj,\n                parent: obj.svg.all,\n                tag:    'labels.yaxis',\n                \n                text: typeof properties.yaxisScaleFormatter === 'function' ? (properties.yaxisScaleFormatter)(this, properties.yaxisScaleMin) : str,\n                \n                x: properties.yaxisPosition === 'right'\n                       ? (obj.width - properties.marginRight + 7 + (properties.yaxis ? (properties.yaxisTickmarksLength - 3) : 0) + properties.yaxisLabelsOffsetx)\n                       : (properties.marginLeft - 7 - (properties.yaxis ? (properties.yaxisTickmarksLength - 3) : 0) + properties.yaxisLabelsOffsetx),\n                y: y + properties.yaxisLabelsOffsety,\n\n                halign: (properties.yaxisPosition === 'right' ? 'left' : 'right'),\n                valign: 'center',\n                \n                font:   textConf.font,\n                size:   textConf.size,\n                bold:   textConf.bold,\n                italic: textConf.italic,\n                color:  textConf.color\n            });\n        \n        \n        //\n        // Draw Y axis labels (eg when specific labels are defined or\n        // the chart is an HBar\n        //\n        } else if (properties.yaxisLabels && properties.yaxisLabels.length) {\n\n            for (var i=0; i<properties.yaxisLabels.length; ++i) {\n\n                var segment = (obj.graphHeight - (properties.marginInnerTop || 0) - (properties.marginInnerBottom || 0) ) / properties.yaxisLabels.length,\n                    y       = properties.marginTop + (properties.marginInnerTop || 0) + (segment * i) + (segment / 2) + properties.yaxisLabelsOffsety,\n                    x       = properties.marginLeft - 7 - (properties.yaxisLinewidth || 1) + properties.yaxisLabelsOffsetx,\n                    halign  = 'right';\n                \n                if (properties.yaxisPosition === 'right') {\n                    halign = 'left';\n                    x      = obj.width - properties.marginRight + 7 + (properties.yaxisLinewidth || 1) + properties.yaxisLabelsOffsetx;\n                }\n\n                // HBar labels\n                if (\n                       obj.type === 'hbar'\n                    && (\n                          (obj.scale.min < obj.scale.max && obj.scale.max <= 0)\n                        || properties.yaxisPosition === 'right'\n                       )\n                    ) {\n\n                    halign = 'left';\n                    x      = obj.width - properties.marginRight + 7 + properties.yaxisLabelsOffsetx;\n                \n                // HBar labels (again?)\n                } else if (obj.type === 'hbar' && !properties.yaxisLabelsSpecific) {\n                    var segment = (obj.graphHeight - (properties.marginInnerTop || 0) - (properties.marginInnerBottom || 0) ) / (properties.yaxisLabels.length);\n                    y = properties.marginTop + (properties.marginInnerTop || 0) + (segment * i) + (segment / 2) + properties.yaxisLabelsOffsety;\n\n                // Specific scale\n                } else {\n                    var segment = (obj.graphHeight - (properties.marginInnerTop || 0) - (properties.marginInnerBottom || 0) ) / (properties.yaxisLabels.length - 1);\n                    y = obj.height - properties.marginBottom - (segment * i) + properties.yaxisLabelsOffsety;\n                }\n\n                var text = RGraph.SVG.text({\n\n                    object: obj,\n                    parent: obj.svg.all,\n                    tag:    'labels.yaxis',\n                    \n                    text:   properties.yaxisLabels[i] ? properties.yaxisLabels[i] : '',\n\n                    x:      x,\n                    y:      y,\n\n                    halign: halign,\n                    valign: 'center',\n\n                    font:   textConf.font,\n                    size:   textConf.size,\n                    bold:   textConf.bold,\n                    italic: textConf.italic,\n                    color:  textConf.color\n                });\n            }\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n        //\n        // Draw the title\n        //\n        if (properties.yaxisTitle) {\n            //\n            // Get the text width of the labels so that the position of the title\n            // can be adjusted\n            //\n            if (obj.scale && obj.scale.labels) {\n\n                var textConf = RGraph.SVG.getTextConf({\n                    object: obj,\n                    prefix: 'yaxisLabels'\n                });\n\n                var maxLabelLength = RGraph.SVG.measureText({\n                    text:   obj.scale.labels[obj.scale.labels.length - 1],\n                    bold:   textConf.bold,\n                    font:   textConf.font,\n                    size:   textConf.size,\n                    italic: textConf.italic\n                })[0];\n            }\n\n\n            // If the chart is an HBar chart then the maximum length of the labels\n            // needs to be calculated so that the Y axis title doesn't overlap them\n            if ((obj.type === 'hbar' && properties.yaxisLabels && properties.yaxisLabels.length)) {\n                maxLabelLength = (function (labels)\n                {\n                    var textConf = RGraph.SVG.getTextConf({\n                        object: obj,\n                        prefix: 'yaxisLabels'\n                    });\n\n                    for (var i=0,max=0; i<labels.length; ++i) {\n                        var dim = RGraph.SVG.measureText({\n                            text:   labels[i],\n                            bold:   textConf.bold,\n                            font:   textConf.font,\n                            size:   textConf.size,\n                            italic: textConf.italic\n                        });\n\n                        max = Math.max(max, dim[0]);\n                    }\n\n                    return max;\n                })(properties.yaxisLabels);\n            }\n\n            var x = properties.yaxisPosition === 'right' ? (obj.width - properties.marginRight) + 5 + maxLabelLength + 10 : properties.marginLeft - 5 - maxLabelLength - 10;\n            var y = ((obj.height - properties.marginTop - properties.marginBottom) / 2) + properties.marginTop;\n\n\n            // Specific X and Y coordinates for the title\n            if (typeof properties.yaxisTitleOffsetx === 'number') x += properties.yaxisTitleOffsetx;\n            if (typeof properties.yaxisTitleOffsety === 'number') y += properties.yaxisTitleOffsety;\n\n            // Specific X and Y coordinates for the title\n            if (typeof properties.yaxisTitleX === 'number') x = properties.yaxisTitleX;\n            if (typeof properties.yaxisTitleY === 'number') y = properties.yaxisTitleY;\n\n\n\n            // Get the Y axis title configuration\n            var textConf = RGraph.SVG.getTextConf({\n                object: obj,\n                prefix: 'yaxisTitle'\n            });\n\n            // Draw the text\n            RGraph.SVG.text({\n\n              object:     obj,\n              parent:     obj.svg.all,\n              tag:        'yaxis.title',\n\n                font:   textConf.font,\n                size:   textConf.size,\n                bold:   textConf.bold,\n                italic: textConf.italic,\n                color:  textConf.color,\n\n                x:          x,\n                y:          y,\n\n                text:       properties.yaxisTitle.toString(),\n                \n                valign:     properties.yaxisTitleValign || 'bottom',\n                halign:     properties.yaxisTitleHalign || 'center',\n                \n                angle: properties.yaxisPosition === 'right' ? 270 : 90\n            });\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Draws the background\n    //\n    //@param The chart object\n    //\n    RGraph.SVG.drawBackground = function (obj)\n    {\n        var properties = obj.properties;\n\n        // Set these properties so that if it doesn't exist things don't fail\n        if (typeof properties.variant3dOffsetx !== 'number') properties.variant3dOffsetx = 0;\n        if (typeof properties.variant3dOffsety !== 'number') properties.variant3dOffsety = 0;\n\n\n\n\n        if (properties.backgroundColor) {\n\n            RGraph.SVG.create({\n                svg:  obj.svg,\n                parent: obj.svg.all,\n                type: 'rect',\n                attr: {\n                    x: -1 + properties.variant3dOffsetx + properties.marginLeft,\n                    y: -1 - properties.variant3dOffsety + properties.marginTop,\n                    width: parseFloat(obj.svg.getAttribute('width')) + 2 - properties.marginLeft - properties.marginRight,\n                    height: parseFloat(obj.svg.getAttribute('height')) + 2 - properties.marginTop - properties.marginBottom,\n                    fill: properties.backgroundColor\n                }\n            });\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n        // Render a background image\n        // <image xlink:href=\"firefox.jpg\" x=\"0\" y=\"0\" height=\"50px\" width=\"50px\"/>\n        if (properties.backgroundImage) {\n        \n            var attr = {\n                'xlink:href': properties.backgroundImage,\n                //preserveAspectRatio: 'xMidYMid slice',\n                preserveAspectRatio: properties.backgroundImageAspect || 'none',\n                x: properties.marginLeft,\n                y: properties.marginTop\n            };\n\n            if (properties.backgroundImageStretch) {\n\n                attr.x      = properties.marginLeft + properties.variant3dOffsetx;\n                attr.y      = properties.marginTop + properties.variant3dOffsety;\n                attr.width  = obj.width - properties.marginLeft - properties.marginRight;\n                attr.height = obj.height - properties.marginTop - properties.marginBottom;\n\n            } else {\n\n                if (typeof properties.backgroundImageX === 'number') {\n                    attr.x =  properties.backgroundImageX + properties.variant3dOffsetx;\n                } else {\n                    attr.x =  properties.marginLeft + properties.variant3dOffsetx;\n                }\n\n                if (typeof properties.backgroundImageY === 'number') {\n                    attr.y =  properties.backgroundImageY + properties.variant3dOffsety;\n                } else {\n                    attr.y =  properties.marginTop + properties.variant3dOffsety;\n                }\n\n                if (typeof properties.backgroundImageW === 'number') {\n                    attr.width =  properties.backgroundImageW;\n                }\n                 \n\n                if (typeof properties.backgroundImageH === 'number') {\n                    attr.height =  properties.backgroundImageH;\n                }\n\n            }\n\n            //\n            // Account for the chart being 3d\n            //\n            if (properties.variant === '3d') {\n                attr.x += properties.variant3dOffsetx;\n                attr.y -= properties.variant3dOffsety;\n            }\n\n\n\n            var img = RGraph.SVG.create({\n                svg:  obj.svg,\n                parent: obj.svg.all,\n                type: 'image',\n                attr: attr,\n                style: {\n                    opacity: typeof properties.backgroundImageOpacity === 'number' ? properties.backgroundImageOpacity : 1\n                }\n            });\n            \n            // Set the width and height if necessary\n            if (!properties.backgroundImageStretch) {\n                var img2    = new Image();\n                img2.src    = properties.backgroundImage;\n                img2.onload = function ()\n                {\n                    if (properties.backgroundImageW === 'number') img.setAttribute('width', properties.backgroundImageW);\n                    if (properties.backgroundImageH === 'number') img.setAttribute('height', properties.backgroundImageH);\n                };\n            }\n        }\n\n\n\n\n\n\n\n\n\n\n\n        if (properties.backgroundGrid) {\n\n            var parts = [];\n\n\n\n            // Add the horizontal lines to the path\n            if (properties.backgroundGridHlines) {\n\n                if (typeof properties.backgroundGridHlinesCount === 'number') {\n                    var count = properties.backgroundGridHlinesCount;\n                } else if (obj.type === 'hbar' || obj.type === 'bipolar') {\n                    if (typeof properties.yaxisLabels === 'object' && !RGraph.SVG.isNull(properties.yaxisLabels) && properties.yaxisLabels.length) {\n                        var count = properties.yaxisLabels.length;\n                    } else if (obj.type === 'hbar') {\n                        var count = obj.data.length;\n                    } else if (obj.type === 'bipolar') {\n                        var count = obj.left.length;\n                    }\n                } else {\n                    var count = properties.yaxisLabelsCount || 5;\n                }\n\n                for (var i=0; i<=count; ++i) {\n\n                    parts.push('M{1} {2} L{3} {4}'.format(\n                        properties.marginLeft + properties.variant3dOffsetx,\n                        properties.marginTop + (obj.graphHeight / count) * i - properties.variant3dOffsety,\n                        obj.width - properties.marginRight + properties.variant3dOffsetx,\n                        properties.marginTop + (obj.graphHeight / count) * i - properties.variant3dOffsety\n                    ));\n                }\n\n\n                // Add an extra background grid line to the path - this its\n                // underneath the X axis and shows up if its not there.\n                parts.push('M{1} {2} L{3} {4}'.format(\n                    properties.marginLeft + properties.variant3dOffsetx,\n                    obj.height - properties.marginBottom - properties.variant3dOffsety,\n                    obj.width - properties.marginRight + properties.variant3dOffsetx,\n                    obj.height - properties.marginBottom - properties.variant3dOffsety\n                ));\n            }\n\n\n\n            // Add the vertical lines to the path\n            if (properties.backgroundGridVlines) {\n\n                if (obj.type === 'line' && RGraph.SVG.isArray(obj.data[0])) {\n                    var len = obj.data[0].length;\n                } else if (obj.type === 'hbar') {\n                    var len = properties.xaxisLabelsCount || 10;\n                } else if (obj.type === 'bipolar') {\n                    var len = properties.xaxisLabelsCount || 10;\n                } else if (obj.type === 'scatter') {\n                    var len = (properties.xaxisLabels && properties.xaxisLabels.length) || 10;\n                } else if (obj.type === 'waterfall') {\n                    var len = obj.data.length;\n\n                } else {\n                    var len = obj.data.length;\n                }\n\n                var count = typeof properties.backgroundGridVlinesCount === 'number' ? properties.backgroundGridVlinesCount : len;\n\n                if (properties.xaxisLabelsPosition === 'edge') {\n                    count--;\n                }\n            \n                for (var i=0; i<=count; ++i) {\n                    parts.push('M{1} {2} L{3} {4}'.format(\n                        properties.marginLeft + ((obj.graphWidth / count) * i) + properties.variant3dOffsetx,\n                        properties.marginTop - properties.variant3dOffsety,\n                        properties.marginLeft + ((obj.graphWidth / count) * i) + properties.variant3dOffsetx,\n                        obj.height - properties.marginBottom - properties.variant3dOffsety\n                    ));\n                }\n            }\n\n\n\n\n\n            // Add the box around the grid\n            if (properties.backgroundGridBorder) {\n                parts.push('M{1} {2} L{3} {4} L{5} {6} L{7} {8} z'.format(\n                    \n                    properties.marginLeft + properties.variant3dOffsetx,\n                    properties.marginTop  - properties.variant3dOffsety,\n                    \n                    obj.width - properties.marginRight + properties.variant3dOffsetx,\n                    properties.marginTop - properties.variant3dOffsety,\n                    \n                    obj.width - properties.marginRight + properties.variant3dOffsetx,\n                    obj.height - properties.marginBottom - properties.variant3dOffsety,\n                    \n                    properties.marginLeft + properties.variant3dOffsetx,\n                    obj.height - properties.marginBottom - properties.variant3dOffsety\n                ));\n            }\n\n            \n            // Get the dash array if its defined to be dotted or dashed\n            var dasharray;\n\n            if (properties.backgroundGridDashed) {\n                dasharray = [3,5];\n            } else if (properties.backgroundGridDotted) {\n                dasharray = [1,3];\n            } else if (properties.backgroundGridDashArray) {\n                dasharray = properties.backgroundGridDashArray;\n            } else {\n                dasharray = '';\n            }\n\n\n            // Now draw the path\n            var grid = RGraph.SVG.create({\n                svg: obj.svg,\n                parent: obj.svg.all,\n                type: 'path',\n                attr: {\n                    className: 'rgraph_background_grid',\n                    d: parts.join(' '),\n                    stroke: properties.backgroundGridColor,\n                    fill: 'rgba(0,0,0,0)',\n                    'stroke-width': properties.backgroundGridLinewidth,\n                    'shape-rendering': \"crispEdges\",\n                    'stroke-dasharray': dasharray\n                },\n                style: {\n                    pointerEvents: 'none'\n                }\n            });\n\n        }\n\n\n\n\n\n        // Draw the title and subtitle\n        if (obj.type !== 'bipolar') {\n            RGraph.SVG.drawTitle(obj);\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns true/false as to whether the given variable is null or not\n    // \n    // @param mixed arg The argument to check\n    //\n    RGraph.SVG.isNull = function (arg)\n    {\n        // must BE DOUBLE EQUALS - NOT TRIPLE\n        if (arg == null || typeof arg === 'object' && !arg) {\n            return true;\n        }\n        \n        return false;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns an appropriate scale. The return value is actualy an object consisting of:\n    //  scale.max\n    //  scale.min\n    //  scale.scale\n    // \n    // @param  opt object Configuration properties for the function\n    // @return     object An object containg scale information\n    //\n    RGraph.SVG.getScale = function (opt)\n    {\n        var obj          = opt.object,\n            properties   = obj.properties,\n            numlabels    = opt.numlabels,\n            unitsPre     = opt.unitsPre,\n            unitsPost    = opt.unitsPost,\n            max          = Number(opt.max),\n            min          = Number(opt.min),\n            strict       = opt.strict,\n            decimals     = Number(opt.decimals),\n            point        = opt.point,\n            thousand     = opt.thousand,\n            originalMax  = max,\n            round        = opt.round,\n            scale        = {max:1,labels:[],values:[]},\n            formatter    = opt.formatter;\n\n\n        //\n        // Special case for 0\n        // \n        // ** Must be first **\n        //\n\n        if (max === 0 && min === 0) {\n\n            var max = 1;\n\n            for (var i=0; i<numlabels; ++i) {\n\n                var label = ((((max - min) / numlabels) * (i + 1)) + min).toFixed(decimals);\n\n                scale.labels.push(unitsPre + label + unitsPost);\n                scale.values.push(parseFloat(label))\n            }\n\n        //\n        // Manually do decimals\n        //\n        } else if (max <= 1 && !strict) {\n\n            var arr = [\n                1,0.5,\n                0.10,0.05,\n                0.010,0.005,\n                0.0010,0.0005,\n                0.00010,0.00005,\n                0.000010,0.000005,\n                0.0000010,0.0000005,\n                0.00000010,0.00000005,\n                0.000000010,0.000000005,\n                0.0000000010,0.0000000005,\n                0.00000000010,0.00000000005,\n                0.000000000010,0.000000000005,\n                0.0000000000010,0.0000000000005\n            ], vals = [];\n\n\n\n            for (var i=0; i<arr.length; ++i) {\n                if (max > arr[i]) {\n                    i--;\n                    break;\n                }\n            }\n\n\n            scale.max    = arr[i]\n            scale.labels = [];\n            scale.values = [];\n\n\n            for (var j=0; j<numlabels; ++j) {\n                \n                var value = ((((arr[i] - min) / numlabels) * (j + 1)) + min).toFixed(decimals);\n\n                scale.values.push(value);\n                scale.labels.push(RGraph.SVG.numberFormat({\n                    object: obj,\n                    num: value,\n                    prepend: unitsPre,\n                    append: unitsPost,\n                    point: properties.yaxisScalePoint,\n                    thousand: properties.yaxisScaleThousand,\n                    formatter: formatter\n                }));\n            }\n\n\n\n\n        } else if (!strict) {\n\n            //\n            // Now comes the scale handling for integer values\n            //\n\n            // This accommodates decimals by rounding the max up to the next integer\n            max = Math.ceil(max);\n\n            var interval = Math.pow(10, Math.max(1, Number(String(Number(max) - Number(min)).length - 1)) );\n            var topValue = interval;\n\n            while (topValue < max) {\n                topValue += (interval / 2);\n            }\n\n            // Handles cases where the max is (for example) 50.5\n            if (Number(originalMax) > Number(topValue)) {\n                topValue += (interval / 2);\n            }\n\n            // Custom if the max is greater than 5 and less than 10\n            if (max <= 10) {\n                topValue = (Number(originalMax) <= 5 ? 5 : 10);\n            }\n    \n    \n            // Added 02/11/2010 to create \"nicer\" scales\n            if (obj && typeof round == 'boolean' && round) {\n                topValue = 10 * interval;\n            }\n\n            scale.max = topValue;\n\n\n            for (var i=0; i<numlabels; ++i) {\n\n                var label = RGraph.SVG.numberFormat({\n                    object: obj,\n                    num: ((((i+1) / numlabels) * (topValue - min)) + min).toFixed(decimals),\n                    prepend: unitsPre,\n                    append: unitsPost,\n                    point: point,\n                    thousand: thousand,\n                    formatter: formatter\n                });\n\n                scale.labels.push(label);\n                scale.values.push(((((i+1) / numlabels) * (topValue - min)) + min).toFixed(decimals));\n            }\n\n        } else if (typeof max === 'number' && strict) {\n\n            //\n            // ymax is set and also strict\n            //\n            for (var i=0; i<numlabels; ++i) {\n                \n                scale.labels.push(RGraph.SVG.numberFormat({\n                    object: obj,\n                    formatter: formatter,\n                    num: ((((i+1) / numlabels) * (max - min)) + min).toFixed(decimals),\n                    prepend: unitsPre,\n                    append: unitsPost,\n                    point: point,\n                    thousand: thousand\n                }));\n\n\n                scale.values.push(\n                    ((((i+1) / numlabels) * (max - min)) + min).toFixed(decimals)\n                );\n            }\n\n            // ???\n            scale.max = max;\n        }\n\n        \n        scale.unitsPre  = unitsPre;\n        scale.unitsPost = unitsPost;\n        scale.point     = point;\n        scale.decimals  = decimals;\n        scale.thousand  = thousand;\n        scale.numlabels = numlabels;\n        scale.round     = Boolean(round);\n        scale.min       = min;\n\n        //\n        // Convert all of the scale values to numbers\n        //\n        for (var i=0; i<scale.values.length; ++i) {\n            scale.values[i] = parseFloat(scale.values[i]);\n        }\n\n        return scale;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Pads/fills the array\n    // \n    // @param  array arr The array\n    // @param  int   len The length to pad the array to\n    // @param  mixed     The value to use to pad the array (optional)\n    //\n    //RGraph.SVG.arrayFill = \n    //RGraph.SVG.arrayPad  = function (opt)\n    //{\n    //    var arr   = opt.array,\n    //        len   = opt.length,\n    //        value = (typeof opt.value === 'undefined' ? null : opt.value);\n\n    //    if (arr.length < len) {            \n    //        for (var i=arr.length; i<len; i+=1) {\n    //            arr[i] = value;\n    //        }\n    //    }\n    //    \n    //    return arr;\n    //};\n\n\n\n\n\n\n\n\n    //\n    // An array sum function\n    // \n    // @param  array arr The  array to calculate the total of\n    // @return int       The summed total of the arrays elements\n    //\n    RGraph.SVG.arraySum = function (arr)\n    {\n        // Allow integers\n        if (typeof arr === 'number') {\n            return arr;\n        }\n        \n        // Account for null\n        if (RGraph.SVG.isNull(arr)) {\n            return 0;\n        }\n\n        var i, sum, len = arr.length;\n\n        for(i=0,sum=0;i<len;sum+=arr[i++]);\n\n        return sum;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns the maximum numeric value which is in an array. This function IS NOT\n    // recursive\n    // \n    // @param  array arr The array (can also be a number, in which case it's returned as-is)\n    // @param  int       Whether to ignore signs (ie negative/positive)\n    // @return int       The maximum value in the array\n    //\n    RGraph.SVG.arrayMax = function (arr)\n    {\n        var max = null\n        \n        if (typeof arr === 'number') {\n            return arr;\n        }\n        \n        if (RGraph.SVG.isNull(arr)) {\n            return 0;\n        }\n\n        for (var i=0,len=arr.length; i<len; ++i) {\n            if (typeof arr[i] === 'number') {\n\n                var val = arguments[1] ? Math.abs(arr[i]) : arr[i];\n                \n                if (typeof max === 'number') {\n                    max = Math.max(max, val);\n                } else {\n                    max = val;\n                }\n            }\n        }\n\n        return max;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns the minimum numeric value which is in an array\n    // \n    // @param  array arr The array (can also be a number, in which case it's returned as-is)\n    // @param  int       Whether to ignore signs (ie negative/positive)\n    // @return int       The minimum value in the array\n    //\n    RGraph.SVG.arrayMin = function (arr)\n    {\n        var max = null,\n            min = null,\n            ma  = Math;\n        \n        if (typeof arr === 'number') {\n            return arr;\n        }\n        \n        if (RGraph.SVG.isNull(arr)) {\n            return 0;\n        }\n\n        for (var i=0,len=arr.length; i<len; ++i) {\n            if (typeof arr[i] === 'number') {\n\n                var val = arguments[1] ? Math.abs(arr[i]) : arr[i];\n                \n                if (typeof min === 'number') {\n                    min = Math.min(min, val);\n                } else {\n                    min = val;\n                }\n            }\n        }\n\n        return min;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns the maximum value which is in an array\n    // \n    // @param  array arr The array\n    // @param  int   len The length to pad the array to\n    // @param  mixed     The value to use to pad the array (optional)\n    //\n    RGraph.SVG.arrayFill =\n    RGraph.SVG.arrayPad = function (args)\n    {\n        if (arguments.length === 1) {\n            var arr = args.array,\n                val = args.value,\n                len = args.length;\n        } else {\n            var arr = arguments[0],\n                len = arguments[1],\n                val = arguments[2];\n        }\n\n        if (arr.length < len) {\n            \n            var val = typeof val !== 'undefined' ? val : null;\n            \n            for (var i=arr.length; i<len; i+=1) {\n                arr[i] = val;\n            }\n        }\n\n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // An array sum function\n    // \n    // @param  array arr The  array to calculate the total of\n    // @return int       The summed total of the arrays elements\n    //\n    RGraph.SVG.arraySum = function (arr)\n    {\n        // Allow integers\n        if (typeof arr === 'number') {\n            return arr;\n        }\n        \n        // Account for null\n        if (RGraph.SVG.isNull(arr)) {\n            return 0;\n        }\n\n        var i, sum, len = arr.length;\n\n        for(i=0,sum=0;i<len;sum+=arr[i++]);\n\n        return sum;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Takes any number of arguments and adds them to one big linear array\n    // which is then returned\n    // \n    // @param ... mixed The data to linearise. You can strings, booleans, numbers or arrays\n    //\n    RGraph.SVG.arrayLinearize = function ()\n    {\n        var arr  = [],\n            args = arguments\n\n        for (var i=0,len=args.length; i<len; ++i) {\n\n            if (typeof args[i] === 'object' && args[i]) {\n                for (var j=0,len2=args[i].length; j<len2; ++j) {\n                    var sub = RGraph.SVG.arrayLinearize(args[i][j]);\n                    \n                    for (var k=0,len3=sub.length; k<len3; ++k) {\n                        arr.push(sub[k]);\n                    }\n                }\n            } else {\n                arr.push(args[i]);\n            }\n        }\n\n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Takes one off the front of the given array and returns the new array.\n    // \n    // @param array arr The array from which to take one off the front of array \n    // \n    // @return array The new array\n    //\n    RGraph.SVG.arrayShift = function(arr)\n    {\n        var ret = [];\n        \n        for(var i=1,len=arr.length; i<len; ++i) {\n            ret.push(arr[i]);\n        }\n        \n        return ret;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Reverses the order of an array\n    // \n    // @param array arr The array to reverse\n    //\n    RGraph.SVG.arrayReverse = function (arr)\n    {\n        if (!arr) {\n            return;\n        }\n\n        var newarr=[];\n\n        for(var i=arr.length - 1; i>=0; i-=1) {\n            newarr.push(arr[i]);\n        }\n        \n        return newarr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Makes a clone of an object\n    // \n    // @param obj val The object to clone\n    //\n    RGraph.SVG.clone =\n    RGraph.SVG.arrayClone = function (obj)\n    {\n        //if(obj === null || typeof obj !== 'object') {\n        //    return obj;\n        //}\n\n        // Can't seem to stringify references to DOM nodes so this won't work. Bummer.\n        //\n        //return JSON.parse(JSON.stringify(obj));\n\n        if(obj === null || typeof obj !== 'object') {\n            return obj;\n        }\n\n        if (RGraph.SVG.isArray(obj)) {\n\n            var temp = [];\n    \n            for (var i=0,len=obj.length;i<len; ++i) {\n    \n                if (typeof obj[i]  === 'number') {\n                    temp[i] = (function (arg) {return Number(arg);})(obj[i]);\n    \n                } else if (typeof obj[i]  === 'string') {\n                    temp[i] = (function (arg) {return String(arg);})(obj[i]);\n              \n                } else if (typeof obj[i] === 'function') {\n                    temp[i] = obj[i];\n              \n                } else {\n                    temp[i] = RGraph.SVG.arrayClone(obj[i]);\n                }\n            }\n        } else if (typeof obj === 'object') {\n          \n            var temp = {};\n            \n            for (var i in obj) {\n                if (typeof i === 'string') {\n                    temp[i] = obj[i];\n                }\n            }\n        }\n\n        return temp;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Converts an the truthy values to falsey values and vice-versa\n    //\n    RGraph.SVG.arrayInvert = function (arr)\n    {\n        for (var i=0,len=arr.length; i<len; ++i) {\n            arr[i] = !arr[i];\n        }\n\n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // An array_trim function that removes the empty elements off\n    //both ends\n    //\n    RGraph.SVG.arrayTrim = function (arr)\n    {\n        var out = [], content = false;\n\n        // Trim the start\n        for (var i=0; i<arr.length; i++) {\n        \n            if (arr[i]) {\n                content = true;\n            }\n        \n            if (content) {\n                out.push(arr[i]);\n            }\n        }\n        \n        // Reverse the array and trim the start again\n        out = RGraph.SVG.arrayReverse(out);\n\n        var out2 = [], content = false ;\n        for (var i=0; i<out.length; i++) {\n        \n            if (out[i]) {\n                content = true;\n            }\n        \n            if (content) {\n                out2.push(out[i]);\n            }\n        }\n        \n        // Now reverse the array and return it\n        out2 = RGraph.SVG.arrayReverse(out2);\n\n        return out2;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Determines if the given object is an array or not\n    // \n    // @param mixed obj The variable to test\n    //\n    RGraph.SVG.isArray = function (obj)\n    {\n        if (obj && obj.constructor) {\n            var pos = obj.constructor.toString().indexOf('Array');\n        } else {\n            return false;\n        }\n\n        return obj != null &&\n               typeof pos === 'number' &&\n               pos > 0 &&\n               pos < 20;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Returns the absolute value of a number. You can also pass in an\n    // array and it will run the abs() function on each element. It\n    // operates recursively so sub-arrays are also traversed.\n    // \n    // @param array arr The number or array to work on\n    //\n    RGraph.SVG.abs = function (value)\n    {\n        if (typeof value === 'string') {\n            value = parseFloat(value) || 0;\n        }\n\n        if (typeof value === 'number') {\n            return Math.abs(value);\n        }\n\n        if (typeof value === 'object') {\n            for (i in value) {\n                if (   typeof i === 'string'\n                    || typeof i === 'number'\n                    || typeof i === 'object') {\n\n                    value[i] = RGraph.SVG.abs(value[i]);\n                }\n            }\n            \n            return value;\n        }\n        \n        return 0;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Formats a number with thousand seperators so it's easier to read\n    //\n    // @param opt object The options to the function\n    //\n    RGraph.SVG.numberFormat = function (opt)\n    {\n        var obj                = opt.object,\n            prepend            = opt.prepend ? String(opt.prepend) : '',\n            append             = opt.append ? String(opt.append) : '',\n            output             = '',\n            decimal_seperator  = typeof opt.point === 'string' ? opt.point : '.',\n            thousand_seperator = typeof opt.thousand === 'string' ? opt.thousand : ',',\n            num                = opt.num\n            decimals_trim      = opt.decimals_trim;\n\n        RegExp.$1   = '';\n\n        if (typeof opt.formatter === 'function') {\n            return opt.formatter(obj, num);\n        }\n\n        // Ignore the preformatted version of \"1e-2\"\n        if (String(num).indexOf('e') > 0) {\n            return String(prepend + String(num) + append);\n        }\n\n        // We need then number as a string\n        num = String(num);\n        \n        // Take off the decimal part - we re-append it later\n        if (num.indexOf('.') > 0) {\n            var tmp = num;\n            num     = num.replace(/\\.(.*)/, ''); // The front part of the number\n            decimal = tmp.replace(/(.*)\\.(.*)/, '$2'); // The decimal part of the number\n        } else {\n            decimal = '';\n        }\n\n        // Thousand seperator\n        //var seperator = arguments[1] ? String(arguments[1]) : ',';\n        var seperator = thousand_seperator;\n        \n        //\n        // Work backwards adding the thousand seperators\n        //\n        var foundPoint;\n        for (i=(num.length - 1),j=0; i>=0; j++,i--) {\n            var character = num.charAt(i);\n            \n            if ( j % 3 == 0 && j != 0) {\n                output += seperator;\n            }\n            \n            //\n            // Build the output\n            //\n            output += character;\n        }\n        \n        //\n        // Now need to reverse the string\n        //\n        var rev = output;\n        output = '';\n        for (i=(rev.length - 1); i>=0; i--) {\n            output += rev.charAt(i);\n        }\n\n        // Tidy up\n        //output = output.replace(/^-,/, '-');\n        if (output.indexOf('-' + thousand_seperator) == 0) {\n            output = '-' + output.substr(('-' + thousand_seperator).length);\n        }\n\n        // Reappend the decimal\n        if (decimal.length) {\n            output =  output + decimal_seperator + decimal;\n            decimal = '';\n            RegExp.$1 = '';\n        }\n\n        //\n        // Trim the decimals if it's all zeros\n        //\n        if (decimals_trim) {\n            output = output.replace(/0+$/,'');\n            output = output.replace(/\\.$/,'');\n        }\n\n        // Minor bugette\n        if (output.charAt(0) == '-') {\n            output = output.replace(/-/, '');\n            prepend = '-' + prepend;\n        }\n\n        return prepend + output + append;\n    };\n\n\n\n\n\n\n\n\n    //\n    // A function that adds text to the chart\n    //\n    RGraph.SVG.text = function (opt)\n    {\n        // Get the defaults for the text function from RGraph.SVG.text.defaults object\n        for (var i in RGraph.SVG.text.defaults) {\n            if (typeof i === 'string' && typeof opt[i] === 'undefined') {\n                opt[i] = RGraph.SVG.text.defaults[i];\n            }\n        }\n\n        var obj               = opt.object,\n            parent            = opt.parent || opt.object.svg.all,\n            size              = typeof opt.size === 'number' ? opt.size + 'pt' : (typeof opt.size === 'string' ? opt.size.replace(/pt$/,'') : 12) + 'pt',\n            bold              = opt.bold ? 'bold' : 'normal',\n            font              = opt.font ? opt.font : 'sans-serif',\n            italic            = opt.italic ? 'italic' : 'normal',\n            halign            = opt.halign,\n            valign            = opt.valign,\n            str               = opt.text,\n            x                 = opt.x,\n            y                 = opt.y,\n            color             = opt.color ? opt.color : 'black',\n            background        = opt.background || null,\n            backgroundRounded = opt.backgroundRounded || 0,\n            padding           = opt.padding || 0,\n            link              = opt.link || '',\n            linkTarget        = opt.linkTarget || '_blank',\n            events            = (opt.events === true ? true : false),\n            angle             = opt.angle;\n\n\n\n\n        \n        \n        //\n        // Change numbers to strings\n        //\n        if (typeof str === 'number') {\n            str = String(str);\n        }\n        \n        //\n        // Change null values to an empty string\n        //\n        if (RGraph.SVG.isNull(str)) {\n            str = '';\n        }\n        \n        //\n        // If the string starts with a carriage return add a unicode non-breaking\n        // space to the start of it.\n        //\n        if (str && str.substr(0,2) == '\\r\\n' || str.substr(0,1) === '\\n') {\n            str = \"\\u00A0\" + str;\n        }\n\n\n\n\n        // Horizontal alignment\n        if (halign === 'right') {\n            halign = 'end';\n        } else if (halign === 'center' || halign === 'middle') {\n            halign = 'middle';\n        } else {\n            halign = 'start';\n        }\n\n        // Vertical alignment\n        if (valign === 'top') {\n            valign = 'hanging';\n        } else if (valign === 'center' || valign === 'middle') {\n            valign = 'central';\n            valign = 'middle';\n        } else {\n            valign = 'bottom';\n        }\n\n        //\n        // If a link has been specified then the text node should\n        // be a child of an a node\n        if (link) {\n            var a = RGraph.SVG.create({\n                svg: obj.svg,\n                type: 'a',\n                parent: parent,\n                attr: {\n                    'xlink:href': link,\n                    target: linkTarget\n                }\n            });\n        }\n\n        //\n        // Text does not include carriage returns\n        //\n        if (str && str.indexOf && str.indexOf(\"\\n\") === -1) {\n            var text = RGraph.SVG.create({\n                svg: obj.svg,\n                parent: link ? a : opt.parent,\n                type: 'text',\n                attr: {\n                    tag: opt.tag ? opt.tag : '',        // This is the same as the below\n                    'data-tag': opt.tag ? opt.tag : '', // This is the same as the above\n                    fill: color,\n                    x: x,\n                    y: y,\n                    'font-size':         size,\n                    'font-weight':       bold,\n                    'font-family':       font,\n                    'font-style':        italic,\n                    'text-anchor':       halign,\n                    'dominant-baseline': valign\n                }\n            });\n    \n            var textNode = document.createTextNode(str);\n            text.appendChild(textNode);\n\n            if (!events) {\n                text.style.pointerEvents = 'none';\n            }\n\n\n        \n        //\n        // Includes carriage returns\n        //\n        } else if (str && str.indexOf) {\n            \n            // Measure the text\n            var dimensions = RGraph.SVG.measureText({\n                text: 'My',\n                bold: bold,\n                font: font,\n                size: size\n            });\n            \n            var lineHeight = dimensions[1];\n\n            str = str.split(/\\r?\\n/);\n\n\n\n\n\n            //\n            // Account for the carriage returns and move the text\n            // up as required\n            //\n            if (valign === 'bottom') {\n                y -= str.length * lineHeight;\n            }\n\n            if (valign === 'center' || valign === 'middle') {\n                y -= (str.length * lineHeight) / 2;\n            }\n\n\n\n\n\n            var text = RGraph.SVG.create({\n                svg: obj.svg,\n                parent: link ? a : opt.parent,\n                type: 'text',\n                attr: {\n                    tag: opt.tag ? opt.tag : '',\n                    fill: color,\n                    x: x,\n                    y: y,\n                    'font-size':         size,\n                    'font-weight':       bold,\n                    'font-family':       font,\n                    'font-style':        italic,\n                    'text-anchor':       halign,\n                    'dominant-baseline': valign\n                }\n            });\n\n            if (!events) {\n                text.style.pointerEvents = 'none';\n            }\n\n\n            for (var i=0; i<str.length; ++i) {\n\n                var tspan = RGraph.SVG.create({\n                    svg: obj.svg,\n                    parent: text,\n                    type: 'tspan',\n                    attr: {\n                        x: x,\n                        dy: dimensions ? (dimensions[1] * (i ? 1 : 0)) + 3 : 0\n                    }\n                });\n\n                var textNode = document.createTextNode(str[i]);\n                tspan.appendChild(textNode);\n\n                if (!events) {\n                    tspan.style.pointerEvents = 'none';\n                }\n\n                var dimensions = RGraph.SVG.measureText({\n                    text: str[i],\n                    bold: bold,\n                    font: font,\n                    size: parseInt(size)\n                });\n            }\n        }\n        \n        \n        // Now add the rotation if necessary\n        if (typeof angle === 'number' && angle && text) {\n            text.setAttribute('x', 0);\n            text.setAttribute('y', 0);\n            text.setAttribute('transform', 'translate({1} {2}) rotate({3})'.format(x, y, -1 * angle));\n        }\n\n\n\n        //\n        // Add a background color if specified\n        //\n\n        if (typeof background === 'string') {\n\n            var parent = link ? a : parent;\n\n            var bbox = text.getBBox(),\n                rect = RGraph.SVG.create({\n                    svg:    obj.svg,\n                    parent: parent,\n                    type:   'rect',\n                    attr: {\n                        x:      bbox.x - padding,\n                        y:      bbox.y - padding,\n                        width:  bbox.width + (padding * 2),\n                        height: bbox.height + (padding * 2),\n                        fill:   background,\n                        rx: backgroundRounded,\n                        ry: backgroundRounded\n                    }\n                });\n                \n                if (!events) {\n                    rect.style.pointerEvents = 'none';\n                }\n\n            text.parentNode.insertBefore(rect, text);\n        }\n\n\n\n        if (RGraph.SVG.ISIE && (valign === 'hanging') && text) {\n            text.setAttribute('y', y + (text.scrollHeight / 2));\n\n        } else if (RGraph.SVG.ISIE && valign === 'middle' && text) {\n            text.setAttribute('y', y + (text.scrollHeight / 3));\n        }\n\n\n\n\n        if (RGraph.SVG.ISFF && text) {\n            Y = y + (text.scrollHeight / 3);\n        }\n        \n        return text;\n    };\n    \n    RGraph.SVG.text.defaults = {};\n\n\n\n\n\n\n\n\n    //\n    // Helps you get hold of the SPAN tag nodes that hold the text on the chart\n    //\n    RGraph.SVG.text.find = function (opt)\n    {\n        // Search criteria should include:\n        //  o text (literal string and regex)\n        if (typeof opt.object === 'object' && opt.object.isRGraph) {\n            var svg = opt.object.svg;\n        } else if (typeof opt.svg === 'object' && opt.svg.all) {\n            var svg    = opt.svg;\n            opt.object = svg.__object__;\n        }\n        \n        // Look for text nodes based on the text\n        var nodes = svg.getElementsByTagName('text');\n        var found = [];\n\n        for (var i=0,len=nodes.length; i<len; ++i) {\n\n            var text = false,\n                tag  = false;\n\n            // Exact match or regex on the text\n            if (typeof opt.text === 'string' && nodes[i].innerHTML === opt.text) {\n                text = true;\n            } else if (typeof opt.text === 'object' && nodes[i].innerHTML.match(opt.text)) {\n                text = true;\n            } else if (typeof opt.text === 'undefined') {\n                text = true;\n            }\n\n\n            // Exact match or regex on the tag\n            if (typeof opt.tag === 'string' && nodes[i].getAttribute('tag') === opt.tag) {\n                tag = true;\n            } else if (typeof opt.tag === 'object' && nodes[i].getAttribute('tag').match(opt.tag)) {\n                tag = true;\n            } else if (typeof opt.tag === 'undefined') {\n                tag = true;\n            }\n\n\n            // Did all of the conditions pass?\n            if (text === true && tag === true) {\n                found.push(nodes[i])\n            }\n        }\n\n        // If a callback has been specified then call it whilst\n        // passing it the text\n        if (typeof opt.callback === 'function') {\n            (opt.callback)({nodes: found,object: opt.object});\n        }\n\n        return found;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Creates a UID that is applied to the object\n    //\n    RGraph.SVG.createUID = function ()\n    {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c)\n        {\n            var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n            return v.toString(16);\n        });\n    };\n\n\n\n\n\n\n\n\n    //\n    // Determines if the SVG DIV container is fixed\n    //\n    RGraph.SVG.isFixed = function (svg)\n    {\n        var obj = svg.parentNode,\n            i   = 0;\n\n        while (obj && obj.tagName.toLowerCase() != 'body' && i < 99) {\n\n            if (obj.style.position === 'fixed') {\n                return obj;\n            }\n            \n            obj = obj.offsetParent;\n        }\n\n        return false;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Sets an object in the RGraph registry\n    // \n    // @param string name The name of the value to set\n    //\n    RGraph.SVG.REG.set = function (name, value)\n    {\n        RGraph.SVG.REG.store[name] = value;\n        \n        return value;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Gets an object from the RGraph registry\n    // \n    // @param string name The name of the value to fetch\n    //\n    RGraph.SVG.REG.get = function (name)\n    {\n        return RGraph.SVG.REG.store[name];\n    };\n\n\n\n\n\n\n\n\n    //\n    // Removes white-space from the start aqnd end of a string\n    // \n    // @param string str The string to trim\n    //\n    RGraph.SVG.trim = function (str)\n    {\n        return RGraph.SVG.ltrim(RGraph.SVG.rtrim(str));\n    };\n\n\n\n\n\n\n\n\n    //\n    // Trims the white-space from the start of a string\n    // \n    // @param string str The string to trim\n    //\n    RGraph.SVG.ltrim = function (str)\n    {\n        return str.replace(/^(\\s|\\0)+/, '');\n    };\n\n\n\n\n\n\n\n\n    //\n    // Trims the white-space off of the end of a string\n    // \n    // @param string str The string to trim\n    //\n    RGraph.SVG.rtrim = function (str)\n    {\n        return str.replace(/(\\s|\\0)+$/, '');\n    };\n\n\n\n\n\n\n\n\n    //\n    // Hides the currently shown tooltip\n    //\n    RGraph.SVG.hideTooltip = function ()\n    {\n        var tooltip = RGraph.SVG.REG.get('tooltip');\n\n        if (tooltip && tooltip.parentNode) {\n            tooltip.parentNode.removeChild(tooltip);\n            \n            tooltip.style.display    = 'none';                \n            tooltip.style.visibility = 'hidden';\n            \n            RGraph.SVG.REG.set('tooltip', null);\n        }\n\n        if (tooltip && tooltip.__object__) {\n            RGraph.SVG.removeHighlight(tooltip.__object__);\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Creates a shadow\n    //\n    RGraph.SVG.setShadow = function (options)\n    {\n        var obj     = options.object,\n            offsetx = options.offsetx  || 0,\n            offsety = options.offsety || 0,\n            blur    = options.blur || 0,\n            opacity = options.opacity || 0,\n            id      = options.id;\n\n        var filter = RGraph.SVG.create({\n            svg: obj.svg,\n            parent: obj.svg.defs,\n            type: 'filter',\n            attr: {\n                id: id,\n                 width: \"130%\",\n                 height: \"130%\"\n            }\n        });\n\n        RGraph.SVG.create({\n            svg: obj.svg,\n            parent: filter,\n            type: 'feOffset',\n            attr: {\n                result: 'offOut',\n                'in': 'SourceGraphic',\n                dx: offsetx,\n                dy: offsety\n            }\n        });\n\n        RGraph.SVG.create({\n            svg: obj.svg,\n            parent: filter,\n            type: 'feColorMatrix',\n            attr: {\n                result: 'matrixOut',\n                'in': 'offOut',\n                type: 'matrix',\n                values: '0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 {1} 0'.format(\n                    opacity\n                )\n            }\n        });\n\n        RGraph.SVG.create({\n            svg: obj.svg,\n            parent: filter,\n            type: 'feGaussianBlur',\n            attr: {\n                result: 'blurOut',\n                'in': 'matrixOut',\n                stdDeviation: blur\n            }\n        });\n\n        RGraph.SVG.create({\n            svg: obj.svg,\n            parent: filter,\n            type: 'feBlend',\n            attr: {\n                'in': 'SourceGraphic',\n                'in2': 'blurOut',\n                mode: 'normal'\n            }\n        });\n    };\n\n\n\n\n\n\n\n\n    //\n    // Takes a sequential index and returns the group/index variation of it. Eg if you have a\n    // sequential index from a grouped bar chart this function can be used to convert that into\n    // an appropriate group/index combination\n    // \n    // @param nindex number The sequential index\n    // @param data   array  The original data (which is grouped)\n    // @return              The group/index information\n    //\n    RGraph.SVG.sequentialIndexToGrouped = function (index, data)\n    {\n        var group         = 0,\n            grouped_index = 0;\n\n        while (--index >= 0) {\n\n            if (RGraph.SVG.isNull(data[group])) {\n                group++;\n                grouped_index = 0;\n                continue;\n            }\n\n            // Allow for numbers as well as arrays in the dataset\n            if (typeof data[group] == 'number') {\n                group++\n                grouped_index = 0;\n                continue;\n            }\n            \n\n            grouped_index++;\n            \n            if (grouped_index >= data[group].length) {\n                group++;\n                grouped_index = 0;\n            }\n        }\n\n        return [group, grouped_index];\n    };\n\n\n\n\n\n\n\n\n    //\n    // This is the reverse of the above function - converting\n    // group/index to a sequential index\n    //\n    // @return number The sequential index\n    //\n    RGraph.SVG.groupedIndexToSequential = function (opt)\n    {\n        var dataset = opt.dataset,\n            index   = opt.index,\n            obj     = opt.object;\n\n        for (var i=0,seq=0; i<=dataset; ++i) {\n            for (var j=0; j<obj.data[dataset].length; ++j) {\n                \n                if (i === dataset && j === index) {\n                    return seq;\n                }\n                seq++;\n            }\n        }\n        \n        return seq;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Takes any number of arguments and adds them to one big linear array\n    // which is then returned\n    //\n    // @param ... mixed The data to linearise. You can strings, booleans, numbers or arrays\n    //\n    RGraph.SVG.arrayLinearize = function ()\n    {\n        var arr  = [],\n            args = arguments\n\n        for (var i=0,len=args.length; i<len; ++i) {\n\n            if (typeof args[i] === 'object' && args[i]) {\n                for (var j=0,len2=args[i].length; j<len2; ++j) {\n                    var sub = RGraph.SVG.arrayLinearize(args[i][j]);\n                    \n                    for (var k=0,len3=sub.length; k<len3; ++k) {\n                        arr.push(sub[k]);\n                    }\n                }\n            } else {\n                arr.push(args[i]);\n            }\n        }\n\n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function converts coordinates into the type understood by\n    // SVG for drawing arcs\n    //@param object options An object consisting of:\n    //                       o cx:    The center X coordinate\n    //                       o cy:    The center Y coordinate\n    //                       o angle: The angle\n    //                       o r:     The radius\n    //\n    RGraph.SVG.TRIG.toCartesian = function (options)\n    {\n        return {\n            x: options.cx + (options.r * Math.cos(options.angle)),\n            y: options.cy + (options.r * Math.sin(options.angle))\n        };\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function, when given the x1,x2,y1,y2 coordinates will return\n    //the diagonal length between the two using pythagorous.\n    //\n    RGraph.SVG.TRIG.getHypLength = function (opt)\n    {\n        var h = Math.abs(opt.x2 - opt.x1)\n            v = Math.abs(opt.y2 - opt.y1),\n            r = Math.sqrt(\n                  (h * h)\n                + (v * v)\n            );\n\n        return r;\n    };\n\n\n\n\n\n\n\n\n        // This takes centerx, centery, x and y coordinates and returns the\n        // appropriate angle relative to the canvas angle system. Remember\n        // that the canvas angle system starts at the EAST axis\n        // \n        // @param  number cx  The centerx coordinate\n        // @param  number cy  The centery coordinate\n        // @param  number x   The X coordinate (eg the mouseX if coming from a click)\n        // @param  number y   The Y coordinate (eg the mouseY if coming from a click)\n        //\n        // @return number     The relevant angle (measured in in RADIANS)\n        //\n        RGraph.SVG.TRIG.getAngleByXY = function (opt)\n        {\n            var cx = opt.cx,\n                cy = opt.cy,\n                x  = opt.x,\n                y  = opt.y;\n\n            var angle = Math.atan((y - cy) / (x - cx));\n\n            if (x >= cx && y >= cy) {\n                angle += RGraph.SVG.TRIG.HALFPI;\n            } else if (x >= cx && y < cy) {\n                angle = angle + RGraph.SVG.TRIG.HALFPI;\n            } else if (x < cx && y < cy) {\n                angle = angle + RGraph.SVG.TRIG.PI + RGraph.SVG.TRIG.HALFPI;\n            } else {\n                angle = angle + RGraph.SVG.TRIG.PI + RGraph.SVG.TRIG.HALFPI;\n            }\n\n            return angle;\n        };\n\n\n\n\n\n\n\n\n    //\n    // Gets a path that is usable by the SVG A path command\n    //\n    // @patam object options The options/arg to the function\n    //\n    // NB ** Still used by the Pie chart and the semi-circular Meter **\n    //\n    RGraph.SVG.TRIG.getArcPath = function (options)\n    {\n        //\n        // Make circles start at the top instead of the right hand side\n        //\n        options.start -= 1.57;\n        options.end   -= 1.57;\n\n        var start = RGraph.SVG.TRIG.toCartesian({\n            cx:    options.cx,\n            cy:    options.cy,\n            r:     options.r,\n            angle: options.start}\n        );\n\n        var end = RGraph.SVG.TRIG.toCartesian({\n            cx:    options.cx,\n            cy:    options.cy,\n            r:     options.r,\n            angle: options.end\n        });\n\n        var diff = options.end - options.start;\n        \n        // Initial values\n        var largeArc = '0';\n        var sweep    = '0';\n\n        if (options.anticlockwise && diff > 3.14) {\n            largeArc = '0';\n            sweep    = '0';\n        } else if (options.anticlockwise && diff <= 3.14) {\n            largeArc = '1';\n            sweep    = '0';\n        } else if (!options.anticlockwise && diff > 3.14) {\n            largeArc = '1';\n            sweep    = '1';\n        } else if (!options.anticlockwise && diff <= 3.14) {\n            largeArc = '0';\n            sweep    = '1';\n        }\n        \n        if (options.start > options.end && options.anticlockwise && diff <= 3.14) {\n            largeArc = '0';\n            sweep    = '0';\n        }\n\n        if (options.start > options.end && options.anticlockwise && diff > 3.14) {\n            largeArc = '1';\n            sweep    = '1';\n        }\n\n\n        if (typeof options.moveto === 'boolean' && options.moveto === false) {\n            var d = [\n                \"A\", options.r, options.r, 0, largeArc, sweep, end.x, end.y\n            ];\n        } else {\n            var d = [\n                \"M\", start.x, start.y, \n                \"A\", options.r, options.r, 0, largeArc, sweep, end.x, end.y\n            ];\n        }\n        \n        if (options.array === true) {\n            return d;\n        } else {\n            return d.join(\" \");\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Gets a path that is usable by the SVG A path command\n    //\n    // @patam object options The options/arg to the function\n    //\n    RGraph.SVG.TRIG.getArcPath2 = function (options)\n    {\n        //\n        // Make circles start at the top instead of the right hand side\n        //\n        options.start -= 1.57;\n        options.end   -= 1.57;\n\n        var start = RGraph.SVG.TRIG.toCartesian({\n            cx:    options.cx,\n            cy:    options.cy,\n            r:     options.r,\n            angle: options.start\n        });\n\n        var end = RGraph.SVG.TRIG.toCartesian({\n            cx:    options.cx,\n            cy:    options.cy,\n            r:     options.r,\n            angle: options.end\n        });\n\n        var diff = Math.abs(options.end - options.start);\n        \n        // Initial values\n        var largeArc = '0';\n        var sweep    = '0';\n\n        //TODO Put various options here for the correct combination of flags to use\n        if (!options.anticlockwise) {\n            if (diff > RGraph.SVG.TRIG.PI) {\n                largeArc = '1';\n                sweep    = '1';\n            } else {\n                largeArc = '0';\n                sweep    = '1';\n            }\n        } else {\n            if (diff > RGraph.SVG.TRIG.PI) {\n                largeArc = '1';\n                sweep    = '0';\n            } else {\n                largeArc = '0';\n                sweep    = '0';\n            }\n        }\n\n        if (typeof options.lineto === 'boolean' && options.lineto === false) {\n            var d = [\n                \"M\", start.x, start.y,\n                \"A\", options.r, options.r, 0, largeArc, sweep, end.x, end.y\n            ];\n        } else {\n            var d = [\n                \"M\", options.cx, options.cy,\n                \"L\", start.x, start.y, \n                \"A\", options.r, options.r, 0, largeArc, sweep, end.x, end.y\n            ];\n        }\n\n        if (options.array === true) {\n            return d;\n        } else {\n            return d.join(\" \");\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Gets a path that is usable by the SVG A path command\n    //\n    // @param object options The options/arg to the function\n    //\n    RGraph.SVG.TRIG.getArcPath3 = function (options)\n    {\n        // Make sure the args are numbers\n        options.cx     = Number(options.cx);\n        options.cy     = Number(options.cy);\n        options.start  = Number(options.start);\n        options.end    = Number(options.end);\n        \n        if (typeof options.radius === 'number') {\n            options.r = options.radius;\n        }\n\n        //\n        // Make circles start at the top instead of the right hand side\n        //\n        options.start -= (Math.PI / 2);\n        options.end   -= (Math.PI / 2);\n\n        var start = RGraph.SVG.TRIG.toCartesian({\n            cx:    options.cx,\n            cy:    options.cy,\n            r:     options.r,\n            angle: options.start\n        });\n\n        var end = RGraph.SVG.TRIG.toCartesian({\n            cx:    options.cx,\n            cy:    options.cy,\n            r:     options.r,\n            angle: options.end\n        });\n\n        var diff = Math.abs(options.end - options.start);\n\n        // Initial values\n        var largeArc = '0';\n        var sweep    = '0';\n\n        //TODO Put various options here for the correct combination of flags to use\n        if (!options.anticlockwise) {\n            if (diff > RGraph.SVG.TRIG.PI) {\n                largeArc = '1';\n                sweep    = '1';\n            } else {\n                largeArc = '0';\n                sweep    = '1';\n            }\n        } else {\n            if (diff > RGraph.SVG.TRIG.PI) {\n                largeArc = '1';\n                sweep    = '0';\n            } else {\n                largeArc = '0';\n                sweep    = '0';\n            }\n        }\n\n        if (typeof options.lineto === 'boolean' && options.lineto === false) {\n            if (typeof options.moveto === 'boolean' && options.moveto === false) {\n                var d = [\n                    \"A\", options.r, options.r, 0, largeArc, sweep, end.x, end.y\n                ];\n            } else {\n                var d = [\n                    \"M\", start.x, start.y,\n                    \"A\", options.r, options.r, 0, largeArc, sweep, end.x, end.y\n                ];\n            }\n        } else {\n            var d = [\n                \"L\", start.x, start.y,\n                \"A\", options.r, options.r, 0, largeArc, sweep, end.x, end.y\n            ];\n        }\n\n        if (options.array === true) {\n            return d;\n        } else {\n            return d.join(\" \");\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function gets the end point (X/Y coordinates) of a given radius.\n    // You pass it the center X/Y and the radius and this function will return\n    // the endpoint X/Y coordinates.\n    // \n    // @param number r     The length of the radius\n    // @param number angle The angle to use\n    //\n    RGraph.SVG.TRIG.getRadiusEndPoint = function (opt)\n    {\n\n        // Allow for two arguments style\n        if (arguments.length === 1) {\n            \n            if (typeof opt.radius === 'number') {\n                opt.r = opt.radius;\n            }\n\n            var angle = opt.angle,\n                r     = opt.r;\n\n        } else if (arguments.length === 4) {\n\n            var angle = arguments[0],\n                r     = arguments[1];\n        }\n\n        var x = Math.cos(angle) * r,\n            y = Math.sin(angle) * r;\n\n        return [x, y];\n    };\n\n\n\n\n\n\n\n\n    //\n    // Converts the given number of degrees to radians. Angles in SVG are\n    // measured in radians.\n    // \n    // @param  opt object An object consisting of:\n    //                      o degrees\n    //\n    RGraph.SVG.TRIG.toRadians = function (opt)\n    {\n        return opt.degrees * (Math.PI / 180);\n    };\n\n\n\n\n\n\n\n\n    // Usage: RGraph.SVG.TRIG.toDegrees(3.14) // 180ish\n    //\n    // @param  opt object An object consisting of:\n    //                      o radians\n    //\n    RGraph.SVG.TRIG.toDegrees = function (opt)\n    {\n        return opt.radians * (180 / Math.PI);\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function draws the title. This function also draws the subtitle.\n    //\n    RGraph.SVG.drawTitle = function (obj)\n    {\n        var properties = obj.properties;\n\n        // Work out the X cooordinate for the title and subtitle\n        var x      = ((obj.width - properties.marginLeft - properties.marginRight) / 2) + properties.marginLeft,\n            y      = properties.marginTop - 10,\n            valign = 'bottom';\n\n        // If theres key defined then move the title up\n        if (!RGraph.SVG.isNull(obj.properties.key)) {\n            y -= 20;\n        }\n\n        // If X axis is at the top then move the title up\n        if (   typeof obj.properties.yaxisScaleMax === 'number'\n            && obj.properties.yaxisScaleMax <= 0\n            && obj.properties.yaxisScaleMin < obj.properties.yaxisScaleMax\n           ) {\n            valign = 'top';\n            y = obj.height - obj.properties.marginBottom + 10;\n        }\n\n        // Custom X coordinate\n        if (typeof properties.titleX === 'number') {\n            x = properties.titleX;\n        }\n\n        // Custom Y coordinate\n        if (typeof properties.titleY === 'number') {\n            y = properties.titleY;\n        }\n        \n        // Custom X coordinate\n        if (typeof properties.titleOffsetx === 'number') {\n            x += properties.titleOffsetx;\n        }\n\n        // Custom Y coordinate\n        if (typeof properties.titleOffsety === 'number') {\n            y += properties.titleOffsety;\n        }\n\n        // Move the Y coord up if there's a subtitle\n        if (typeof properties.titleSubtitle === 'string' || typeof properties.titleSubtitle === 'number') {\n            var titleSubtitleDim = RGraph.SVG.measureText({\n                bold:   properties.titleSubtitleBold,\n                italic: properties.titleSubtitleItalic,\n                size:   properties.titleSubtitleSize,\n                font:   properties.titleSubtitleFont,\n                text:   'Mg'\n            });\n            \n            y -= titleSubtitleDim[1];\n        }\n\n\n\n        // Draw the title\n        if (properties.title) {\n\n            RGraph.SVG.text({\n                object: obj,\n                svg:    obj.svg,\n                parent: obj.svg.all,\n                tag:    'title',\n                text:   properties.title.toString(),\n                x:      x,\n                y:      y,\n                halign: properties.titleHalign || 'center',\n                valign: valign,\n                color:  properties.titleColor  || properties.textColor,\n                size:   typeof properties.titleSize === 'number' ? properties.titleSize : properties.textSize + 4,\n                bold:   typeof properties.titleBold === 'boolean' ? properties.titleBold : properties.textBold,\n                italic: typeof properties.titleItalic === 'boolean' ? properties.titleItalic : properties.textItalic,\n                font:   properties.titleFont || properties.textFont\n            });\n        }\n\n\n\n\n        // Draw the subtitle if there's one defined\n        if (\n               (typeof properties.title === 'string' || typeof properties.title === 'number')\n            && (typeof properties.titleSubtitle === 'string' || typeof properties.titleSubtitle === 'number')\n           ) {\n\n            RGraph.SVG.text({\n                object: obj,\n                svg:    obj.svg,\n                parent: obj.svg.all,\n                tag:    'subtitle',\n                text:   properties.titleSubtitle,\n                x:      x,\n                y:      y + 5,\n                halign: properties.titleHalign || 'center',\n                valign: 'top',\n                size:   typeof properties.titleSubtitleSize === 'number' ? properties.titleSubtitleSize : properties.textSize - 2,\n                color:  properties.titleSubtitleColor || properties.textColor,\n                bold:   typeof properties.titleSubtitleBold === 'boolean' ? properties.titleSubtitleBold : properties.textBold,\n                italic: typeof properties.titleSubtitleItalic === 'boolean' ? properties.titleSubtitleItalic : properties.textItalic,\n                font:   properties.titleSubtitleFont || properties.textFont\n            });\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Removes white-space from the start and end of a string\n    // \n    // @param string str The string to trim\n    //\n    RGraph.SVG.trim = function (str)\n    {\n        return RGraph.SVG.ltrim(RGraph.SVG.rtrim(str));\n    };\n\n\n\n\n\n\n\n\n    //\n    // Trims the white-space from the start of a string\n    // \n    // @param string str The string to trim\n    //\n    RGraph.SVG.ltrim = function (str)\n    {\n        return String(str).replace(/^(\\s|\\0)+/, '');\n    };\n\n\n\n\n\n\n\n\n    //\n    // Trims the white-space off of the end of a string\n    // \n    // @param string str The string to trim\n    //\n    RGraph.SVG.rtrim = function (str)\n    {\n        return String(str).replace(/(\\s|\\0)+$/, '');\n    };\n\n\n\n\n\n\n\n\n    //\n    // This parses a single color value\n    //\n    RGraph.SVG.parseColorLinear = function (opt)\n    {\n        var obj   = opt.object,\n            color = opt.color;\n\n        if (!color || typeof color !== 'string') {\n            return color;\n        }\n\n        if (color.match(/^gradient\\((.*)\\)$/i)) {\n            \n            var parts = RegExp.$1.split(':'),\n                diff  = 1 / (parts.length - 1);\n\n            if (opt && opt.direction && opt.direction === 'horizontal') {\n                var grad = RGraph.SVG.create({\n                    type: 'linearGradient',\n                    parent: obj.svg.defs,\n                    attr: {\n                        id: 'RGraph-linear-gradient-' + obj.uid + '-' + obj.gradientCounter,\n                        x1: opt.start || 0,\n                        x2: opt.end || '100%',\n                        y1: 0,\n                        y2: 0,\n                        gradientUnits: opt.gradientUnits || \"userSpaceOnUse\"\n                    }\n                });\n\n            } else {\n\n                var grad = RGraph.SVG.create({\n                    type: 'linearGradient',\n                    parent: obj.svg.defs,\n                    attr: {\n                        id: 'RGraph-linear-gradient-' + obj.uid + '-' + obj.gradientCounter,\n                        x1: 0,\n                        x2: 0,\n                        y1: opt.start || 0,\n                        y2: opt.end || '100%',\n                        gradientUnits: opt.gradientUnits || \"userSpaceOnUse\"\n                    }\n                });\n            }\n\n            // Add the first color stop\n            var stop = RGraph.SVG.create({\n                type: 'stop',\n                parent: grad,\n                attr: {\n                    offset: '0%',\n                    'stop-color': RGraph.SVG.trim(parts[0])\n                }\n            });\n\n            // Add the rest of the color stops\n            for (var j=1,len=parts.length; j<len; ++j) {\n                \n                RGraph.SVG.create({\n                    type: 'stop',\n                    parent: grad,\n                    attr: {\n                        offset: (j * diff * 100) + '%',\n                        'stop-color': RGraph.SVG.trim(parts[j])\n                    }\n                });\n            }\n        }\n        \n        color = grad ? 'url(#RGraph-linear-gradient-' + obj.uid + '-' + (obj.gradientCounter++) + ')' : color;\n\n        return color;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This parses a single color value\n    //\n    RGraph.SVG.parseColorRadial = function (opt)\n    {\n        var obj   = opt.object,\n            color = opt.color;\n\n        if (!color || typeof color !== 'string') {\n            return color;\n        }\n\n        if (color.match(/^gradient\\((.*)\\)$/i)) {\n\n            var parts = RegExp.$1.split(':'),\n                diff  = 1 / (parts.length - 1);\n\n\n            var grad = RGraph.SVG.create({\n                type: 'radialGradient',\n                parent: obj.svg.defs,\n                attr: {\n                    id: 'RGraph-radial-gradient-' + obj.uid + '-' + obj.gradientCounter,\n                    gradientUnits: opt.gradientUnits || 'userSpaceOnUse',\n                    cx: opt.cx || obj.centerx,\n                    cy: opt.cy || obj.centery,\n                    fx: opt.fx || obj.centerx,\n                    fy: opt.fy || obj.centery,\n                    r:  opt.r  || obj.radius\n                }\n            });\n\n            // Add the first color stop\n            var stop = RGraph.SVG.create({\n                type: 'stop',\n                parent: grad,\n                attr: {\n                    offset: '0%',\n                    'stop-color': RGraph.SVG.trim(parts[0])\n                }\n            });\n\n            // Add the rest of the color stops\n            for (var j=1,len=parts.length; j<len; ++j) {\n                \n                RGraph.SVG.create({\n                    type: 'stop',\n                    parent: grad,\n                    attr: {\n                        offset: (j * diff * 100) + '%',\n                        'stop-color': RGraph.SVG.trim(parts[j])\n                    }\n                });\n            }\n        }\n        \n        color = grad ? 'url(#RGraph-radial-gradient-' + obj.uid + '-' + (obj.gradientCounter++) + ')' : color;\n\n        return color;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Reset all of the color values to their original values\n    // \n    // @param object\n    //\n    RGraph.SVG.resetColorsToOriginalValues = function (opt)\n    {\n        var obj = opt.object;\n\n        if (obj.originalColors) {\n            // Reset the colors to their original values\n            for (var j in obj.originalColors) {\n                if (typeof j === 'string') {\n                    obj.properties[j] = RGraph.SVG.arrayClone(obj.originalColors[j]);\n                }\n            }\n        }\n\n        //\n        // If the function is present on the object to reset specific\n        // colors - use that\n        //\n        if (typeof obj.resetColorsToOriginalValues === 'function') {\n            obj.resetColorsToOriginalValues();\n        }\n\n        // Hmmm... Should this be necessary? I don't think it will\n        // do any harm to leave it in.\n        obj.originalColors = {};\n\n\n\n        // Reset the colorsParsed flag so that they're parsed for gradients again\n        obj.colorsParsed = false;\n        \n        // Reset the gradient counter\n        obj.gradientCounter = 1;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Clear the SVG tag by deleting all of its\n    // child nodes\n    //\n    // @param [OPTIONAL] svg The SVG tag (same as what is returned\n    //                   by document.getElementById() )\n    //\n    RGraph.SVG.clear = function ()\n    {\n        // No arguments given - so clear all of the registered\n        // SVG tags.\n        if (arguments.length === 0) {\n            for (var i=0; i<RGraph.SVG.OR.objects.length; i++) {\n                RGraph.SVG.clear(RGraph.SVG.OR.objects[i].svg);\n            }\n            \n            return;\n        \n        // An SVG tag has been given\n        } else {\n            var svg = arguments[0];\n        }\n\n        // Allow the svg to be a string\n        if (typeof svg === 'string') {\n            var div = document.getElementById(svg);\n            var svg = div.__svg__;\n        }\n\n        // Clear all the layer nodes\n        for (var i=1; i<=100; ++i) {\n            if (svg && svg['background' + i]) {\n                \n                // Clear all the nodes within this group\n                while (svg['background' + i].lastChild) {\n                    svg['background' + i].removeChild(svg['background' + i].lastChild);\n                }\n            } else {\n                break;\n            }\n        }\n\n        if (svg.all) {\n            // Clear all the node within the \"all\" group\n            while (svg.all.lastChild) {\n                svg.all.removeChild(svg.all.lastChild);\n            }\n            \n            // Clear Line chart hotspots\n            if (svg.all.line_tooltip_hotspots) {\n                while (svg.all.line_tooltip_hotspots.lastChild) {\n                    svg.all.line_tooltip_hotspots.removeChild(svg.all.line_tooltip_hotspots.lastChild);\n                }\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // The reset function is like the clear function but also clears the\n    // ObjectRegistry for this canvas\n    //\n    RGraph.SVG.reset = function ()\n    {\n        // Reset all registered SVG tags\n        if (arguments.length === 0) {\n            for (var i=0; i<RGraph.SVG.OR.objects.length; i++) {\n                RGraph.SVG.reset(RGraph.SVG.OR.objects[i].svg);\n            }\n\n            return;\n\n        // Reset a single SVG tag\n        } else {\n            var svg = arguments[0];\n        }\n\n        // Allow the svg to be a string\n        if (typeof svg === 'string') {\n            var div = document.getElementById(svg);\n            var svg = div.__svg__;\n        }\n\n        // Get rid of this reference\n        svg.parentNode.__svg__ = null;\n\n        RGraph.SVG.clear(svg);\n\n        // Make sure every element is removed from the SVG tag\n        while (svg.lastChild) {\n            svg.removeChild(svg.lastChild);\n        }\n\n        // Remove the SVG tag from the ObjectRegistry\n        RGraph.SVG.OR.clear(svg);\n        \n        // Get rid of the SVG tag itself\n        svg.parentNode.removeChild(svg);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Adds an event listener\n    // \n    // @param object obj   The graph object\n    // @param string event The name of the event, eg ontooltip\n    // @param object func  The callback function\n    //\n    RGraph.SVG.addCustomEventListener = function (obj, name, func)\n    {\n        // Initialise the events array if necessary\n        if (typeof RGraph.SVG.events[obj.uid] === 'undefined') {\n            RGraph.SVG.events[obj.uid] = [];\n        }\n        \n        // Prepend \"on\" if necessary\n        if (name.substr(0, 2) !== 'on') {\n            name = 'on' + name;\n        }\n\n        RGraph.SVG.events[obj.uid].push({\n            object: obj,\n            event:  name,\n            func:   func\n        });\n\n        return RGraph.SVG.events[obj.uid].length - 1;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Used to fire one of the RGraph custom events\n    // \n    // @param object obj   The graph object that fires the event\n    // @param string event The name of the event to fire\n    //\n    RGraph.SVG.fireCustomEvent = function (obj, name)\n    {\n        if (obj && obj.isRGraph) {\n            \n            var uid = obj.uid;\n\n            if (   typeof uid === 'string'\n                && typeof RGraph.SVG.events === 'object'\n                && typeof RGraph.SVG.events[uid] === 'object'\n                && RGraph.SVG.events[uid].length > 0) {\n\n                for(var j=0,len=RGraph.SVG.events[uid].length; j<len; ++j) {\n                    if (RGraph.SVG.events[uid][j] && RGraph.SVG.events[uid][j].event === name) {\n                        RGraph.SVG.events[uid][j].func(obj);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Clears all the custom event listeners that have been registered\n    // \n    // @param string optional Limits the clearing to this object UID\n    //\n    RGraph.SVG.removeAllCustomEventListeners = function ()\n    {\n        var uid = arguments[0];\n\n        if (uid && RGraph.SVG.events[uid]) {\n            RGraph.SVG.events[uid] = {};\n        } else {\n            RGraph.SVG.events = [];\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Clears a particular custom event listener\n    // \n    // @param object obj The graph object\n    // @param number i   This is the index that is return by .addCustomEventListener()\n    //\n    RGraph.SVG.removeCustomEventListener = function (obj, i)\n    {\n        if (   typeof RGraph.SVG.events === 'object'\n            && typeof RGraph.SVG.events[obj.uid] === 'object'\n            && typeof RGraph.SVG.events[obj.uid][i] === 'object') {\n            \n            RGraph.SVG.events[obj.uid][i] = null;\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Removes the highlight from the chart added by tooltips (possibly others too)\n    //\n    RGraph.SVG.removeHighlight = function (obj)\n    {\n        var highlight = RGraph.SVG.REG.get('highlight');\n\n        if (highlight && RGraph.SVG.isArray(highlight) && highlight.length) {\n            for (var i=0,len=highlight.length; i<len; ++i) {\n                if (highlight[i].parentNode) {\n                    //obj.svg.removeChild(highlight[i]);\n                    highlight[i].parentNode.removeChild(highlight[i]);\n                }\n            }\n        } else if (highlight && highlight.parentNode) {\n            if (obj.type === 'scatter') {\n                highlight.setAttribute('stroke0width', '0');\n                highlight.setAttribute('stroke', 'transparent');\n                highlight.setAttribute('fill', 'transparent');\n            } else {\n                highlight.parentNode.removeChild(highlight);\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // Removes the highlight from the chart added by tooltips (possibly others too)\n    //\n    RGraph.SVG.redraw = function ()\n    {\n        if (arguments.length === 1) {\n\n            var svg = arguments[0];\n\n            if (svg.parentNode) {\n                RGraph.SVG.clear(svg);\n    \n                var objects = RGraph.SVG.OR.get('id:' + svg.parentNode.id);\n    \n                for (var i=0,len=objects.length; i<len; ++i) {\n    \n                    // Reset the colors to the original values\n                    RGraph.SVG.resetColorsToOriginalValues({object: objects[i]});\n    \n                    objects[i].draw();\n                }\n            }\n        } else {\n\n            var tags = RGraph.SVG.OR.tags();\n\n            for (var i in tags) {\n                RGraph.SVG.redraw(tags[i]);\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // A better, more flexible, date parsing function\n    //\n    //@param  string str The string to parse\n    //@return number     A number, as returned by Date.parse()\n    //\n    RGraph.SVG.parseDate = function (str)\n    {\n        var d = new Date();\n\n        // Initialise the default values\n        var defaults = {\n            seconds: '00',\n            minutes: '00',\n              hours: '00',\n               date: d.getDate(),\n              month: d.getMonth() + 1,\n               year: d.getFullYear()\n        };\n\n        // Create the months array for turning textual months back to numbers\n        var months       = ['january','february','march','april','may','june','july','august','september','october','november','december'],\n            months_regex = months.join('|');\n\n        for (var i=0; i<months.length; ++i) {\n            months[months[i]] = i;\n            months[months[i].substring(0,3)] = i;\n            months_regex = months_regex + '|' + months[i].substring(0,3);\n        }\n\n        // These are the seperators allowable for d/m/y and y/m/d dates\n        // (Its part of a regexp so the position of the square brackets\n        //  is crucial)\n        var sep = '[-./_=+~#:;,]+';\n\n\n        // Tokenise the string\n        var tokens = str.split(/ +/);\n\n        // Loop through each token checking what it is\n        for (var i=0,len=tokens.length; i<len; ++i) {\n            if (tokens[i]) {\n                \n                // Year\n                if (tokens[i].match(/^\\d\\d\\d\\d$/)) {\n                    defaults.year = tokens[i];\n                }\n\n                // Month\n                var res = isMonth(tokens[i]);\n                if (typeof res === 'number') {\n                    defaults.month = res + 1; // Months are zero indexed\n                }\n\n                // Date\n                if (tokens[i].match(/^\\d?\\d(?:st|nd|rd|th)?$/)) {\n                    defaults.date = parseInt(tokens[i]);\n                }\n\n                // Time\n                if (tokens[i].match(/^(\\d\\d):(\\d\\d):?(?:(\\d\\d))?$/)) {\n                    defaults.hours   = parseInt(RegExp.$1);\n                    defaults.minutes = parseInt(RegExp.$2);\n                    \n                    if (RegExp.$3) {\n                        defaults.seconds = parseInt(RegExp.$3);\n                    }\n                }\n\n                // Dateformat: XXXX-XX-XX\n                if (tokens[i].match(new RegExp('^(\\\\d\\\\d\\\\d\\\\d)' + sep + '(\\\\d\\\\d)' + sep + '(\\\\d\\\\d)$', 'i'))) {\n                    defaults.date  = parseInt(RegExp.$3);\n                    defaults.month = parseInt(RegExp.$2);\n                    defaults.year  = parseInt(RegExp.$1);\n\n                }\n\n                // Dateformat: XX-XX-XXXX\n                if (tokens[i].match(new RegExp('^(\\\\d\\\\d)' + sep + '(\\\\d\\\\d)' + sep + '(\\\\d\\\\d\\\\d\\\\d)$','i') )) {\n                    defaults.date  = parseInt(RegExp.$1);\n                    defaults.month = parseInt(RegExp.$2);\n                    defaults.year  = parseInt(RegExp.$3);\n                }\n            }\n        }\n\n        // Now put the defaults into a format thats recognised by Date.parse()\n        str = '{1}/{2}/{3} {4}:{5}:{6}'.format(\n            defaults.year,\n            String(defaults.month).length     === 1 ? '0' + (defaults.month) : defaults.month,\n            String(defaults.date).length      === 1 ? '0' + (defaults.date)      : defaults.date,\n            String(defaults.hours).length     === 1 ? '0' + (defaults.hours)     : defaults.hours,\n            String(defaults.minutes).length   === 1 ? '0' + (defaults.minutes)   : defaults.minutes,\n            String(defaults.seconds).length   === 1 ? '0' + (defaults.seconds)   : defaults.seconds\n        );\n\n        return Date.parse(str);\n\n        //\n        // Support functions\n        //\n        function isMonth(str)\n        {\n            var res = str.toLowerCase().match(months_regex);\n\n            return res ? months[res[0]] : false;\n        }\n    };\n\n\n\n\n\n\n\n\n    // The ObjectRegistry add function\n    RGraph.SVG.OR.add = function (obj)\n    {\n        RGraph.SVG.OR.objects.push(obj);\n\n        return obj;\n    };\n\n\n\n\n\n\n\n\n    // The ObjectRegistry function that returns all of the objects. Th argument\n    // can aither be:\n    //\n    // o omitted  All of the registered objects are returned\n    // o id:XXX  All of the objects on that SVG tag are returned\n    // o type:XXX All the objects of that type are returned\n    //\n    RGraph.SVG.OR.get = function ()\n    {\n        // Fetch objects that are on a particular SVG tag\n        if (typeof arguments[0] === 'string' && arguments[0].substr(0, 3).toLowerCase() === 'id:') {\n            \n            var ret = [];\n\n            for (var i=0; i<RGraph.SVG.OR.objects.length; ++i) {\n                if (RGraph.SVG.OR.objects[i] && RGraph.SVG.OR.objects[i].id === arguments[0].substr(3)) {\n                    ret.push(RGraph.SVG.OR.objects[i]);\n                }\n            }\n\n            return ret;\n        }\n\n\n        // Fetch objects that are of a particular type\n        //\n        // TODO Allow multiple types to be specified\n        if (typeof arguments[0] === 'string' && arguments[0].substr(0, 4).toLowerCase() === 'type') {\n            \n            var ret = [];\n            \n            for (var i=0; i<RGraph.SVG.OR.objects.length; ++i) {\n                if (RGraph.SVG.OR.objects[i].type === arguments[0].substr(5)) {\n                    ret.push(RGraph.SVG.OR.objects[i]);\n                }\n            }\n            \n            return ret;\n        }\n\n\n        // Fetch an object that has a specific UID\n        if (typeof arguments[0] === 'string' && arguments[0].substr(0, 3).toLowerCase() === 'uid') {\n            \n            var ret = [];\n            \n            for (var i=0; i<RGraph.SVG.OR.objects.length; ++i) {\n                if (RGraph.SVG.OR.objects[i].uid === arguments[0].substr(4)) {\n                    ret.push(RGraph.SVG.OR.objects[i]);\n                }\n            }\n            \n            return ret;\n        }\n\n        return RGraph.SVG.OR.objects;\n    };\n\n\n\n\n\n\n\n    //\n    // Clear the ObjectRegistry of charts\n    //\n    // @param [OPTIONAL] string You can optionally give an ID so only objects\n    //                          pertaining to that SVG tag are cleared.\n    //\n    RGraph.SVG.OR.clear = function ()\n    {\n        // Clear the ObjectRegistry of objects for a particular ID\n        if (typeof arguments[0] === 'string') {\n            for (var i=0; i<RGraph.SVG.OR.objects.length; ++i) {\n                if (RGraph.SVG.OR.objects[i].id === arguments[0]) {\n                    RGraph.SVG.OR.objects[i] = null;\n                }\n            }\n        \n        // If an RGraph object is given then clear that object\n        } else if (typeof arguments[0] === 'object') {\n            for (var i=0; i<RGraph.SVG.OR.objects.length; ++i) {\n                if (RGraph.SVG.OR.objects[i].uid === arguments[0].uid) {\n                    RGraph.SVG.OR.objects[i] = null;\n                }\n            }\n\n        // Clear the entire ObjectRegistry\n        } else {\n            RGraph.SVG.OR.objects = [];\n        }\n    };\n\n\n\n\n\n\n\n\n    // The ObjectRegistry function that returns all of the registeredt SVG tags\n    //\n    RGraph.SVG.OR.tags = function ()\n    {\n        var tags = [];\n\n        for (var i=0; i<RGraph.SVG.OR.objects.length; ++i) {\n            if (RGraph.SVG.OR.objects[i] && !tags[RGraph.SVG.OR.objects[i].svg.parentNode.id]) {\n                tags[RGraph.SVG.OR.objects[i].svg.parentNode.id] = RGraph.SVG.OR.objects[i].svg;\n            }\n        }\n\n        return tags;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function returns a two element array of the SVG x/y position in\n    // relation to the page\n    // \n    // @param object svg\n    //\n    RGraph.SVG.getSVGXY = function (svg)\n    {\n        var x  = 0,\n            y  = 0,\n            el = svg.parentNode; // !!!\n\n\n\n\n\n\n\n\n\n\n\n\n        // If the getBoundingClientRect function is available - use that\n        //\n        if (svg.getBoundingClientRect) {\n            \n            var rect = svg.getBoundingClientRect();\n\n            // Add the the current scrollTop and scrollLeft becuase the getBoundingClientRect()\n            // method is relative to the viewport - not the document\n            var scrollLeft = window.pageXOffset || document.documentElement.scrollLeft,\n                scrollTop  = window.pageYOffset || document.documentElement.scrollTop;\n\n            return [rect.x + scrollLeft, rect.y + scrollTop];\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/*\n        do {\n\n            x += el.offsetLeft;\n            y += el.offsetTop;\n\n            // Account for tables in webkit\n            if (el.tagName.toLowerCase() == 'table' && (RGraph.SVG.ISCHROME || RGraph.SVG.ISSAFARI)) {\n                x += parseInt(el.border) || 0;\n                y += parseInt(el.border) || 0;\n            }\n\n            el = el.offsetParent;\n\n        } while (el && el.tagName && el.tagName.toLowerCase() != 'body');\n\n\n        var paddingLeft = svg.style.paddingLeft ? parseInt(svg.style.paddingLeft) : 0,\n            paddingTop  = svg.style.paddingTop ? parseInt(svg.style.paddingTop) : 0,\n            borderLeft  = svg.style.borderLeftWidth ? parseInt(svg.style.borderLeftWidth) : 0,\n            borderTop   = svg.style.borderTopWidth  ? parseInt(svg.style.borderTopWidth) : 0;\n\n        if (navigator.userAgent.indexOf('Firefox') > 0) {\n            x += parseInt(document.body.style.borderLeftWidth) || 0;\n            y += parseInt(document.body.style.borderTopWidth) || 0;\n        }\n\n        return [x + paddingLeft + borderLeft, y + paddingTop + borderTop];\n*/\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function is a compatibility wrapper around\n    // the requestAnimationFrame function.\n    //\n    // @param function func The function to give to the\n    //                      requestAnimationFrame function\n    //\n    RGraph.SVG.FX.update = function (func)\n    {\n        win.requestAnimationFrame =\n            win.requestAnimationFrame ||\n            win.webkitRequestAnimationFrame ||\n            win.msRequestAnimationFrame ||\n            win.mozRequestAnimationFrame ||\n            (function (func){setTimeout(func, 16.666);});\n        \n        win.requestAnimationFrame(func);\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function returns an easing multiplier for effects so they eas out towards the\n    // end of the effect.\n    // \n    // @param number frames The total number of frames\n    // @param number frame  The frame number\n    //\n    RGraph.SVG.FX.getEasingMultiplier = function (frames, frame)\n    {\n        var multiplier = Math.pow(Math.sin((frame / frames) * RGraph.SVG.TRIG.HALFPI), 3);\n\n        return multiplier;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Measures text by creating a DIV in the document and adding the relevant\n    // text to it, then checking the .offsetWidth and .offsetHeight.\n    // \n    // @param  object opt An object containing the following:\n    //                        o text( string) The text to measure\n    //                        o bold (bool)   Whether the text is bold or not\n    //                        o font (string) The font to use\n    //                        o size (number) The size of the text (in pts)\n    // \n    // @return array         A two element array of the width and height of the text\n    //\n    RGraph.SVG.measureText = function (opt)\n    {\n        //text, bold, font, size\n        var text   = opt.text   || '',\n            bold   = opt.bold   || false,\n            italic = opt.italic || false,\n            font   = opt.font   || 'sans-serif',\n            size   = opt.size   || 12,\n            str    = text + ':' + italic + ':' + bold + ':' + font + ':' + size;\n\n        // Add the sizes to the cache as adding DOM elements is costly and causes slow downs\n        if (typeof RGraph.SVG.measuretext_cache === 'undefined') {\n            RGraph.SVG.measuretext_cache = [];\n        }\n\n        if (opt.cache !== false && typeof RGraph.SVG.measuretext_cache == 'object' && RGraph.SVG.measuretext_cache[str]) {\n            return RGraph.SVG.measuretext_cache[str];\n        }\n\n        \n        if (!RGraph.SVG.measuretext_cache['text-span'] || opt.cache === false) {\n            var span = document.createElement('SPAN');\n                span.style.position   = 'absolute';\n                span.style.padding    = 0;\n                span.style.display    = 'inline';\n                span.style.top        = '-200px';\n                span.style.left       = '-200px';\n                span.style.lineHeight = '1em';\n            document.body.appendChild(span);\n            \n            // Now store the newly created DIV\n            RGraph.SVG.measuretext_cache['text-span'] = span;\n\n        } else if (RGraph.SVG.measuretext_cache['text-span']) {\n            var span = RGraph.SVG.measuretext_cache['text-span'];\n\n            // Clear the contents of the SPAN tag\n            while(span.firstChild){\n                span.removeChild(span.firstChild);\n            }\n        }\n\n        //span.innerHTML        = text.replace(/\\r?\\n/g, '<br />');\n        span.insertAdjacentHTML('afterbegin', String(text).replace(/\\r?\\n/g, '<br />'));\n\n        span.style.fontFamily = font;\n        span.style.fontWeight = bold ? 'bold' : 'normal';\n        span.style.fontStyle  = italic ? 'italic' : 'normal';\n        span.style.fontSize   = String(size).replace(/pt$/, '') + 'pt';\n\n        var sizes = [span.offsetWidth, span.offsetHeight];\n\n        //document.body.removeChild(span);\n        RGraph.SVG.measuretext_cache[str] = sizes;\n\n        return sizes;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function converts an array of strings to an array of numbers. Its used by the meter/gauge\n    // style charts so that if you want you can pass in a string. It supports various formats:\n    // \n    // '45.2'\n    // '-45.2'\n    // ['45.2']\n    // ['-45.2']\n    // '45.2,45.2,45.2' // A CSV style string\n    // \n    // @param number frames The string or array to parse\n    //\n    RGraph.SVG.stringsToNumbers = function (str)\n    {\n        // An optional seperator to use intead of a comma\n        var sep = arguments[1] || ',';\n\n\n\n        // Remove preceding square brackets\n        if (typeof str === 'string' && str.trim().match(/^\\[ *\\d+$/)) {\n            str = str.replace('[', '');\n        }\n        \n        \n        // If it's already a number just return it\n        if (typeof str === 'number') {\n            return str;\n        }\n\n\n\n\n\n        if (typeof str === 'string') {\n            if (str.indexOf(sep) != -1) {\n                str = str.split(sep);\n            } else {\n                str = parseFloat(str);\n\n                if (isNaN(str)) {\n                    str = null;\n                }\n            }\n        }\n\n\n\n\n\n\n        if (typeof str === 'object'  && !RGraph.SVG.isNull(str)) {\n            for (var i=0,len=str.length; i<len; i+=1) {\n                str[i] = RGraph.SVG.stringsToNumbers(\n                    str[i],\n                    sep\n                );\n            }\n        }\n\n        return str;\n    };\n\n\n\n\n\n\n\n\n    // This function allows for numbers that are given as a +/- adjustment\n    RGraph.SVG.getAdjustedNumber = function (opt)\n    {\n        var value = opt.value,\n            prop  = opt.prop;\n    \n        if (typeof prop === 'string' && match(/^(\\+|-)([0-9.]+)/)) {\n            if (RegExp.$1 === '+') {\n                value += parseFloat(RegExp.$2);\n            } else if (RegExp.$1 === '-') {\n                value -= parseFloat(RegExp.$2);\n            }\n        }\n        \n        return value;\n    };\n\n\n\n\n\n\n\n\n    // NOT USED ANY MORE\n    RGraph.SVG.attribution=function(){return;};\n\n\n\n\n\n\n\n\n    //\n    // Parse a gradient and returns the various parts\n    // \n    // @param string str The gradient string\n    //\n    RGraph.SVG.parseGradient = function (str)\n    {\n    };\n\n\n\n\n\n\n\n\n    //\n    // Generates a random number between the minimum and maximum\n    // \n    // @param number min The minimum value\n    // @param number max The maximum value\n    // @param number     OPTIONAL Number of decimal places\n    //\n    RGraph.SVG.random = function (opt)\n    {\n        var min = opt.min,\n            max = opt.max,\n            dp  = opt.dp || opt.decimals || 0,\n            r   = Math.random();\n\n        return Number((((max - min) * r) + min).toFixed(dp));\n    };\n\n\n\n\n\n\n\n\n    //\n    // Fill an array full of random numbers\n    //\n    RGraph.SVG.arrayRandom  = function (opt)\n    {\n        var num = opt.num,\n            min = opt.min,\n            max = opt.max,\n            dp  = opt.dp || opt.decimals || 0;\n\n        for(var i=0,arr=[]; i<num; i+=1) {\n            arr.push(RGraph.SVG.random({min: min, max: max, dp: dp}));\n        }\n        \n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function is called by each objects setter so that common BC\n    // and adjustments are centralised. And there's less typing for me too.\n    //\n    // @param object opt An object of options to the function, which are:\n    //                    object: The chart object\n    //                    name:   The name of the config parameter\n    //                    value:  The value thats being set\n    //\n    RGraph.SVG.commonSetter = function (opt)\n    {\n        var obj   = opt.object,\n            name  = opt.name,\n            value = opt.value;\n\n        // The default event for tooltips is click\n        if (name === 'tooltipsEvent'&& value !== 'click' && value !== 'mousemove') {\n            value = 'click';\n        }\n\n        return {\n            name:  name,\n            value: value\n        };\n    };\n\n\n\n\n\n\n\n\n    //\n    // Generates logs for... log charts\n    //\n    // @param object opt The options:\n    //                     o num  The number\n    //                     o base The base\n    //\n    RGraph.SVG.log = function (opt)\n    {\n        var num  = opt.num,\n            base = opt.base;\n\n        return Math.log(num) / (base ? Math.log(base) : 1);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Creates a donut path and reurns it. This method creates a\n    // <path> element and returns that element (it does add to\n    // the <svg> document.\n    //\n    // @param opt object An object consisting of these options:\n    //                    o cx\n    //                    o cy\n    //                    o innerRadius\n    //                    o outerRadius\n    //                    o stroke\n    //                    o fill\n    //\n    RGraph.SVG.donut = function (opt)\n    {\n        var arcPath1 = RGraph.SVG.TRIG.getArcPath3({\n            cx: opt.cx,\n            cy: opt.cy,\n            r: opt.outerRadius,\n            start: 0,\n            end: RGraph.SVG.TRIG.TWOPI,\n            anticlockwise: false,\n            lineto: false\n        });\n\n        var arcPath2 = RGraph.SVG.TRIG.getArcPath3({\n            cx: opt.cx,\n            cy: opt.cy,\n            r: opt.innerRadius,\n            start: RGraph.SVG.TRIG.TWOPI,\n            end: 0,\n            anticlockwise: true,\n            lineto: false\n        });\n\n        //\n        // Create the red circle\n        //\n        var path = RGraph.SVG.create({\n            svg: opt.svg,\n            type: 'path',\n            attr: {\n                d: arcPath1 + arcPath2,\n                stroke: opt.stroke || 'transparent',\n                fill: opt.fill || 'transparent',\n             opacity: typeof opt.opacity === 'number' ? opt.opacity : 1\n            }\n        });\n\n        return path;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Copy the globals (if any have been set) from the global object to\n    // this instances configuration\n    //\n    RGraph.SVG.getGlobals = function (obj)\n    {\n        var properties = obj.properties;\n        \n        for (var i in RGraph.SVG.GLOBALS) {\n            if (typeof i === 'string') {\n                obj.set(i, RGraph.SVG.arrayClone(RGraph.SVG.GLOBALS[i]));\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function adds a link to the SVG document\n    //\n    // @param object opt The various options to the function\n    //\n    RGraph.SVG.link = function (opt)\n    {\n        var a = RGraph.SVG.create({\n            svg: bar.svg,\n            type: 'a',\n            parent: bar.svg.all,\n            attr: {\n                'xlink:href': href,\n                target:       target\n            }\n        });\n        \n        var text = RGraph.SVG.create({\n            svg: bar.svg,\n            type: 'text',\n            parent: a,\n            attr: {\n                x: x,\n                y: y,\n                fill: fill\n            }\n        });\n        \n        //text.innerHTML = text;\n        text.insertAdjacentHTML('afterbegin', String(text));\n    };\n\n\n\n\n\n\n\n\n    // This function is used to get the errorbar MAXIMUM value. Its in the common\n    // file because it's used by multiple chart libraries\n    //\n    // @param object opt An object containing the arguments to the function\n    //         o object: The chart object\n    //         o index:  The index to fetch\n    RGraph.SVG.getErrorbarsMaxValue = function (opt)\n    {\n        var obj        = opt.object,\n            properties = obj.properties,\n            index      = opt.index;\n\n        if (typeof properties.errorbars === 'object' && !RGraph.SVG.isNull(properties.errorbars) && typeof properties.errorbars[index] === 'number') {\n            var value = properties.errorbars[index];\n        } else if (   typeof properties.errorbars === 'object'\n                   && !RGraph.SVG.isNull(properties.errorbars)\n                   && typeof properties.errorbars[index] === 'object'\n                   && !RGraph.SVG.isNull(properties.errorbars[index])\n                   && typeof properties.errorbars[index].max === 'number'\n                  ) {\n            var value = properties.errorbars[index].max;\n        } else {\n            var value = 0;\n        }\n        \n        return value;\n    };\n\n\n\n\n\n\n\n\n    // This function is used to get the errorbar MINIMUM value. Its in the common\n    // file because it's used by multiple chart libraries\n    //\n    // @param object opt An object containing the arguments to the function\n    //         o object: The chart object\n    //         o index:  The index to fetch\n    RGraph.SVG.getErrorbarsMinValue = function (opt)\n    {\n        var obj        = opt.object,\n            properties = obj.properties,\n            index      = opt.index;\n\n        if (   typeof properties.errorbars === 'object'\n            && !RGraph.SVG.isNull(properties.errorbars)\n            && typeof properties.errorbars[index] === 'object'\n            && !RGraph.SVG.isNull(properties.errorbars[index])\n            && typeof properties.errorbars[index].min === 'number'\n           ) {\n            var value = properties.errorbars[index].min;\n        } else {\n            var value = null;\n        }\n        \n        return value;\n    };\n\n\n\n\n\n\n\n\n    // This function is used to get the errorbar color. Its in the common\n    // file because it's used by multiple chart libraries\n    //\n    // @param object opt An object containing the arguments to the function\n    //         o object: The chart object\n    //         o index:  The index to fetch\n    RGraph.SVG.getErrorbarsColor = function (opt)\n    {\n        var obj        = opt.object,\n            properties = obj.properties,\n            index      = opt.index;\n\n        var color = properties.errorbarsColor || 'black';\n\n        if (typeof properties.errorbars === 'object' && !RGraph.SVG.isNull(properties.errorbars) && typeof properties.errorbars[index] === 'object' && !RGraph.SVG.isNull(properties.errorbars[index]) && typeof properties.errorbars[index].color === 'string') {\n            color = properties.errorbars[index].color;\n        }\n        \n        return color;\n    };\n\n\n\n\n\n\n\n\n    // This function is used to get the errorbar linewidth. Its in the common\n    // file because it's used by multiple chart libraries\n    //\n    // @param object opt An object containing the arguments to the function\n    //         o object: The chart object\n    //         o index:  The index to fetch\n    RGraph.SVG.getErrorbarsLinewidth = function (opt)\n    {\n        var obj        = opt.object,\n            properties = obj.properties,\n            index      = opt.index;\n\n        var linewidth = properties.errorbarsLinewidth || 1\n\n        if (typeof properties.errorbars === 'object' && !RGraph.SVG.isNull(properties.errorbars) && typeof properties.errorbars[index] === 'object' && !RGraph.SVG.isNull(properties.errorbars[index]) && typeof properties.errorbars[index].linewidth === 'number') {\n            linewidth = properties.errorbars[index].linewidth;\n        }\n\n        return linewidth;\n    };\n\n\n\n\n\n\n\n\n    // This function is used to get the errorbar capWidth. Its in the common\n    // file because it's used by multiple chart libraries\n    //\n    // @param object opt An object containing the arguments to the function\n    //         o object: The chart object\n    //         o index:  The index to fetch\n    RGraph.SVG.getErrorbarsCapWidth = function (opt)\n    {\n        var obj        = opt.object,\n            properties = obj.properties,\n            index      = opt.index;\n\n        var capwidth = properties.errorbarsCapwidth || 10\n\n        if (   typeof properties.errorbars === 'object'\n            && !RGraph.SVG.isNull(properties.errorbars)\n            && typeof properties.errorbars[index] === 'object'\n            && !RGraph.SVG.isNull(properties.errorbars[index])\n            && typeof properties.errorbars[index].capwidth === 'number'\n            ) {\n\n            capwidth = properties.errorbars[index].capwidth;\n        }\n\n        return capwidth;\n    };\n\n\n\n\n\n\n\n\n    // Allows the conversion of older names and values to newer\n    // ones.\n    //\n    // *** When adding this to a new chart library there needs to be\n    // *** two changes done:\n    // ***  o Add the list of aliases as a object variable (eg this.aliases = {}; )\n    // ***  o The bit that goes in the setter that calls the\n    // ***    RGraph.propertyNameAlias() function - copy this from the Bar chart object\n    //\n    RGraph.SVG.propertyNameAlias = function () {};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    //\n    // This is here so that if the tooltip library has not\n    // been included, this function will show an alert\n    //informing the user\n    //\n    if (typeof RGraph.SVG.tooltip !== 'function') {\n        RGraph.SVG.tooltip = function ()\n        {\n            $a('The tooltip library has not been included!');\n        };\n    }\n\n\n\n\n\n\n\n\n    //\n    // The responsive function. This installs the rules as stipulated\n    // in the rules array.\n    //\n    // @param object conf An object map of properties/arguments for the function.\n    //                    This should consist of:\n    //                     o maxWidth\n    //                     o width\n    //                     o height\n    //                     o options\n    //                     o css\n    //                     o parentCss\n    //                     o callback\n    //\n    RGraph.SVG.responsive = function (conf)\n    {\n        var obj = this;\n\n        //\n        // Sort the configuration so that it descends in order of biggest screen\n        // to smallest\n        //\n        conf.sort(function (a, b)\n        {\n            var aNull = RGraph.SVG.isNull(a.maxWidth);\n            var bNull = RGraph.SVG.isNull(b.maxWidth);\n            \n            if (aNull && bNull) return 0;\n            if (aNull && !bNull) return -1;\n            if (!aNull && bNull) return 1;\n\n            return b.maxWidth - a.maxWidth;\n        });\n\n        //\n        // Preparse the configuration adding any missing minWidth values to the configuration\n        //\n        for (var i=0; i<conf.length; ++i) {\n            if (conf[i+1] && typeof conf[i+1].maxWidth === 'number') {\n                conf[i].minWidth = conf[i+1].maxWidth;\n            } else if (!conf[i+1]) {\n                conf[i].minWidth = 0;\n            }\n        }\n\n        //\n        // Loop through the configurations\n        //\n        for (var i=0; i<conf.length; ++i) {\n        \n            // Set the minimum and maximum\n            conf[i].minWidth = RGraph.SVG.isNull(conf[i].minWidth) ?      0 : conf[i].minWidth;\n            conf[i].maxWidth = RGraph.SVG.isNull(conf[i].maxWidth) ? 100000 : conf[i].maxWidth;\n            \n            // Create the media query string\n            var str = 'screen and (min-width: %1px) and (max-width: %2px)'.format(\n                conf[i].minWidth,\n                conf[i].maxWidth\n            );\n        \n            var mediaQuery = window.matchMedia(str);\n            (function (index)\n            {\n                mediaQuery.addListener(function (e)\n                {\n                    if (e.matches) {\n                        matchFunction(conf[index]);\n                    }\n                });\n            })(i);\n            \n            // An Initial test\n            if (   document.documentElement.clientWidth >= conf[i].minWidth\n                && document.documentElement.clientWidth < conf[i].maxWidth) {\n                matchFunction(conf[i]);\n            }\n        }\n\n        //\n        // If a rule matches - this is the function that runs\n        //\n        function matchFunction (rule)\n        {\n            // If a width is defined for this rule set it\n            if (typeof rule.width === 'number') {\n                obj.svg.setAttribute('width',  rule.width);\n                obj.container.style.width = rule.width + 'px';\n            }\n\n\n            //\n            // If a height is defined for this rule set it\n            //\n            if (typeof rule.height === 'number') {\n                obj.svg.setAttribute('height',  rule.height);\n                obj.container.style.height = rule.height + 'px';\n            }\n\n\n\n\n\n            // Are there any options to be set?\n            //\n            if (typeof rule.options === 'object') {\n                for (var j in rule.options) {\n                    if (typeof j === 'string') {\n                        obj.set(j, rule.options[j]);\n                    }\n                }\n            }\n\n\n\n\n\n            //\n            // This function simply sets a CSS property on the object.\n            // It accommodates certain name changes\n            //\n            var setCSS = function (el, name, value)\n            {\n                var replacements = [\n                    ['float', 'cssFloat']\n                ];\n                \n                // Replace the name if necessary\n                for (var i=0; i<replacements.length; ++i) {\n                    if (name === replacements[i][0]) {\n                        name = replacements[i][1];\n                    }\n                }\n\n                el.style[name] = value;\n            };\n\n\n\n\n            //\n            // Are there any CSS properties to set on the SVG tag?\n            //\n            if (typeof rule.css === 'object') {\n                for (var j in rule.css) {\n                    if (typeof j === 'string') {\n                        setCSS(obj.svg.parentNode, j, rule.css[j])\n                    }\n                }\n            }\n\n\n\n            //\n            // Are there any CSS properties to set on the SVGs PARENT tag?\n            //\n            if (typeof rule.parentCss === 'object') {\n                for (var j in rule.parentCss) {\n                    if (typeof j === 'string') {\n                        setCSS(obj.svg.parentNode.parentNode, j, rule.parentCss[j])\n                    }\n                }\n            }\n\n\n\n\n            // Redraw the chart - with SVG this is done by the redraw() function\n            RGraph.SVG.redraw();\n\n\n\n\n            // Run the callback function if it's defined\n            if (typeof rule.callback === 'function') {\n                (rule.callback)(obj);\n            }\n        }\n        \n        // Returning the object facilitates chaining\n        return obj;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function can be used to resize the canvas when the screen size changes. You\n    // specify various rules and they're then checked.\n    //\n    RGraph.SVG.responsiveOld = function (conf)\n    {\n        var opt = arguments[1] || {},\n            \n            // This function is added to each object in their constructors so the this\n            // variable is the chart object.\n            obj   = this,\n            \n            // The func variable becomes the function that is fired by the resize event\n            func  = null,\n            \n            // This is the timer reference\n            timer = null;\n        \n        // The resizie function will run This many milliseconds after the\n        // resize has \"finished\"\n        opt.delay = typeof opt.delay === 'number' ? opt.delay : 200;\n\n        // [TODO] Store defaults that are used if there's no match\n        var func = function ()\n        {\n            // This is set to true if a rule matches\n            var matched = false;\n\n            // Loop through all of the rules\n            for (var i=0; i<conf.length; ++i) {\n\n                //\n                // If a maxWidth is stipulated test that\n                //\n                if (!matched && (document.documentElement.clientWidth <= conf[i].maxWidth || RGraph.SVG.isNull(conf[i].maxWidth))) {\n                \n                    matched = true;\n                    \n                    // If a width is defined for this rule set it\n                    if (typeof conf[i].width === 'number') {                        \n                        obj.svg.setAttribute('width',  conf[i].width);\n                        obj.container.style.width = conf[i].width + 'px';\n                    }\n\n\n\n\n                    //\n                    // If a height is defined for this rule set it\n                    //\n                    if (typeof conf[i].height === 'number') {\n                        obj.svg.setAttribute('height',  conf[i].height);\n                        obj.container.style.height = conf[i].height + 'px';\n                    }\n\n\n\n\n                    //\n                    // Are there any options to be set?\n                    //\n                    if (typeof conf[i].options === 'object' && typeof conf[i].options === 'object') {\n                        for (var j in conf[i].options) {\n                            if (typeof j === 'string') {\n\n                                obj.set(j, conf[i].options[j]);\n                            }\n                        }\n                    }\n\n\n\n\n                    //\n                    // This function simply sets a CSS property on the object.\n                    // It accommodates certain name changes\n                    //\n                    var setCSS = function (el, name, value)\n                    {\n                        var replacements = [\n                            ['float', 'cssFloat']\n                        ];\n                        \n                        // Replace the name if necessary\n                        for (var i=0; i<replacements.length; ++i) {\n                            if (name === replacements[i][0]) {\n                                name = replacements[i][1];\n                            }\n                        }\n\n                        el.style[name] = value;\n                    };\n\n\n\n\n                    //\n                    // Are there any CSS properties to set on the SVG tag?\n                    //\n                    if (typeof conf[i].css === 'object') {\n                        for (var j in conf[i].css) {\n                            if (typeof j === 'string') {\n                                setCSS(obj.svg.parentNode, j, conf[i].css[j])\n                            }\n                        }\n                    }\n\n                    //\n                    // Are there any CSS properties to set on the SVGs PARENT tag?\n                    //\n                    if (typeof conf[i].parentCss === 'object') {\n                        for (var j in conf[i].parentCss) {\n                            if (typeof j === 'string') {\n                                setCSS(obj.svg.parentNode.parentNode, j, conf[i].parentCss[j])\n                            }\n                        }\n                    }\n\n\n\n                    // Redraw the chart with SVG this is done by the redraw() function\n                    RGraph.SVG.redraw();\n\n                    // Run the callback function if it's defined\n                    if (typeof conf[i].callback === 'function') {\n                        (conf[i].callback)(obj);\n                    }\n                }\n            }\n        }\n\n\n\n\n\n\n        // Install the resize event listener\n        window.addEventListener('resize', function ()\n        {\n            // Set a new timer in order to fire the func() function\n            if (opt.delay > 0) {\n                // Clear the timeout\n                clearTimeout(timer);\n                \n                // Start a new timer going\n                timer = setTimeout(func, opt.delay);\n            \n            // If you don't want a delay before the resizing occurs\n            // then set the delay to zero and it will be fired immediately\n            } else {\n                func();\n            }\n        });\n\n        \n        // Call the function initially otherwise it may never run\n        func();\n        \n        // This facilitates chaining\n        return obj;\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function gets the text properties when given a relevant prefix.\n    // So if you give it 'text' as the prefix you'll get the:\n    //\n    //  o textFont\n    //  o textSize\n    //  o textColor\n    //  o textBold\n    //  o textItalic\n    //\n    // ...properties. On the other hand if you give it 'yaxisScaleLabels'\n    // as the prefix you'll get:\n    //\n    //  o yaxisScaleLabelsFont\n    //  o yaxisScaleLabelsSize\n    //  o yaxisScaleLabelsColor\n    //  o yaxisScaleLabelsBold\n    //  o yaxisScaleLabelsItalic\n    // \n    // @param  args object An object consisting of:\n    //                      o object\n    //                      o prefix\n    //\n    RGraph.SVG.getTextConf = function (args)\n    {\n        var obj        = args.object,\n            properties = obj.properties,\n            prefix     = args.prefix;\n\n        // Has to be a seperate var statement\n        var font   = typeof properties[prefix + 'Font']   === 'string'  ? properties[prefix + 'Font']   : properties.textFont,\n            size   = typeof properties[prefix + 'Size']   === 'number'  ? properties[prefix + 'Size']   : properties.textSize,\n            color  = typeof properties[prefix + 'Color']  === 'string'  ? properties[prefix + 'Color']  : properties.textColor,\n            bold   = typeof properties[prefix + 'Bold']   === 'boolean' ? properties[prefix + 'Bold']   : properties.textBold,\n            italic = typeof properties[prefix + 'Italic'] === 'boolean' ? properties[prefix + 'Italic'] : properties.textItalic;\n\n        return {font: font, size: size, color: color, bold: bold, italic: italic};\n    };\n\n\n\n\n\n\n\n\n    //\n    // Label substitution. This allows you to use dynamic\n    // labels if you want like this:\n    //\n    // ...\n    // names: ['Richard','Jerry','Lucy'],\n    // xaxisLabels: '%{names:[%{index}]}: %{value_formatted}'\n    // ...\n    //\n    //@param object args This can be an object which contains the following\n    //                   things:\n    //                           args.text      The text on which to perform the substitution on\n    //                                          (ie the original label)\n    //                           args.object    The chart object\n    //                           args.index     The index of the label\n    //                           args.value     The value of the data point\n    //                           args.decimals  The number of decimals\n    //                           args.point     The decimal character\n    //                           args.thousand  The thousand separator\n    //                           args.unitsPre  The units that are prepended to the number\n    //                           args.unitsPost The units that are appended to the number\n    //                          \n    //\n    RGraph.SVG.labelSubstitution = function (args)\n    {\n          //////////////////////\n         // Must be a string //\n        //////////////////////\n        var text = String(args.text);\n\n          /////////////////////////////////////////////////////////////////\n         // If there's no template tokens in the string simply reurn it //\n        /////////////////////////////////////////////////////////////////\n        if (!text.match(/%{.*?}/)) {\n            return text;\n        }\n\n          //////////////////////////////////////////\n         // This allows for escaping the percent //\n        //////////////////////////////////////////\n        var text = text.replace(/%%/g, '___--PERCENT--___');\n\n\n\n\n\n          ////////////////////////////////////\n         // Replace the index of the label //\n        ////////////////////////////////////\n        text = text.replace(/%{index}/g, args.index);\n\n\n\n          ////////////////////////////////////////////////////////////////////\n         // Do property substitution when there's an index to the property //\n        ////////////////////////////////////////////////////////////////////\n        var reg = /%{prop(?:erty)?:([_a-z0-9]+)\\[([0-9]+)\\]}/i;\n\n        while (text.match(reg)) {\n\n            var property = RegExp.$1,\n                index    = parseInt(RegExp.$2);\n\n            if (args.object.properties[property]) {\n                text = text.replace(\n                    reg,\n                    args.object.properties[property][index] || ''\n                );\n\n            // Get rid of the text if there was nothing to replace the template bit with\n            } else {\n                text = text.replace(reg,'');\n            }\n                \n            RegExp.lastIndex = null;\n        }\n\n\n          ////////////////////////////////////\n         // Replace this: %{property:xxx}% //\n        ////////////////////////////////////\n        while (text.match(/%{property:([_a-z0-9]+)}/i)) {\n            var str = '%{property:' + RegExp.$1 + '}';\n            text    = text.replace(str, args.object.properties[RegExp.$1]);\n        }\n\n\n\n         ////////////////////////////////\n        // Replace this: %{prop:xxx}% //\n        ///////////////////////////////\n        while (text.match(/%{prop:([_a-z0-9]+)}/i)) {\n            var str = '%{prop:' + RegExp.$1 + '}';\n            text    = text.replace(str, args.object.properties[RegExp.$1]);\n        }\n\n\n\n          /////////////////////////////////////////////////////////\n         // Replace this: %{value} and this: %{value_formatted} //\n        ////////////////////////////////////////////////////////\n        while (text.match(/%{value(?:_formatted)?}/i)) {\n            \n            var value = args.value;\n\n            if (text.match(/%{value_formatted}/i)) {\n\n\n\n\n\n\n\n                text = text.replace(\n                    '%{value_formatted}',\n                    typeof value === 'number' ? RGraph.SVG.numberFormat({\n                        object:    args.object,\n                        num:       value.toFixed(args.decimals),\n                        thousand:  args.thousand  || ',',\n                        point:     args.point     || '.',\n                        prepend:  args.unitsPre  || '',\n                        append: args.unitsPost || ''\n                    }) : null\n                );\n\n            } else {\n                text = text.replace('%{value}', value);\n            }\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          ////////////////////////////////////////////////////////////////\n         // Do global substitution when there's an index to the global //\n        ////////////////////////////////////////////////////////////////\n        var reg = /%{global:([_a-z0-9.]+)\\[([0-9]+)\\]}/i;\n\n        while (text.match(reg)) {\n\n            var name  = RegExp.$1,\n                index = parseInt(RegExp.$2);\n\n            if (eval(name)[index]) {\n                text = text.replace(\n                    reg,\n                    eval(name)[index] || ''\n                );\n\n            // Get rid of the text if there was nothing to replace the template bit with\n            } else {\n                text = text.replace(reg,'');\n            }\n                \n            RegExp.lastIndex = null;\n        }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n          //////////////////////////////////////////////////\n         // Do global substitution when there's no index //\n        //////////////////////////////////////////////////\n        var reg = /%{global:([_a-z0-9.]+)}/i;\n\n        while (text.match(reg)) {\n\n            var name = RegExp.$1;\n\n            if (eval(name)) {\n                text = text.replace(\n                    reg,\n                    eval(name) || ''\n                );\n\n            // Get rid of the text if there was nothing to replace the template bit with\n            } else {\n                text = text.replace(reg,'');\n            }\n                \n            RegExp.lastIndex = null;\n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n\n\n\n        ///////////////////////////////////\n        // And lastly - call any functions\n        // MUST be last\n        //////////////////////////////////\n        var regexp = /%{function:([_A-Za-z0-9]+)\\((.*?)\\)}/;\n        \n        // Temporarily replace carriage returns and line feeds with CR and LF\n        // so the the s option is not needed\n        text = text.replace(/\\r/,'|CR|');\n        text = text.replace(/\\n/,'|LF|');\n\n        while (text.match(regexp)) {\n\n            var str  = RegExp.$1 + '(' + RegExp.$2 + ')';\n            \n            for (var i=0,len=str.length; i<len; ++i) {\n                str  = str.replace(/\\r?\\n/, \"\\\\n\");\n            }\n            \n            RGraph.SVG.REG.set('label-templates-function-object', args.object);\n\n            var func = new Function ('return ' + str);\n            var ret  = func();\n\n            text = text.replace(regexp, ret)\n        }\n\n        // Replace CR and LF with a space\n        text = text.replace(/\\|CR\\|/, ' ');\n        text = text.replace(/\\|LF\\|/, ' ');\n\n\n\n\n\n\n\n        \n        // Replace line returns with br tags\n        //text = text.replace(/\\r?\\n/g, '<br />'); Pretty sure this doesn't need doing here\n        text = text.replace(/___--PERCENT--___/g, '%')\n\n\n        return text.toString();\n    };\n\n\n\n\n\n\n\n\n    //\n    // A shortcut for the create function that gets added to\n    // each object\n    //\n    // @param obj The object\n    //\n    RGraph.SVG.addCreateFunction = function (obj)\n    {\n        //\n        // This is the function that's appended to\n        // each object\n        //\n        // @param string type   The type of node to create\n        // @param object parent The parent node\n        // @param object attr   Attributes to add to the new node\n        // @param object style  Style properties to add to the new\n        //                      node\n        //\n        obj.create = function (type, parent, attr)\n        {\n            var style = arguments[3] ? arguments[3] : {};\n\n            // Special case for arcPaths\n            if (type.toLowerCase() === 'arcpath') {\n                return RGraph.SVG.TRIG.getArcPath(attr);\n            \n            } else if (type.toLowerCase() === 'arcpath2') {\n                return RGraph.SVG.TRIG.getArcPath2(attr);\n            \n            } else if (type.toLowerCase() === 'arcpath3') {\n                return RGraph.SVG.TRIG.getArcPath3(attr);\n                \n            } else {\n                return RGraph.SVG.create({\r\n                    svg: this.svg,\r\n                    parent: parent,\r\n                    type: type,\r\n                    attr: attr,\n                    style: style\r\n                });\n            }\n        };\n    };\n\n\n\n\n\n\n\n\n    //\n    //\n    // Adds custom text to the chart based on whats\n    // in the objects text: property.\n    //\n    //@param object obj The chart object\n    //\n    RGraph.SVG.addCustomText = function (obj)\n    {\n        if (RGraph.SVG.isArray(obj.properties.text) && obj.properties.text.length) {\n            for (var i=0; i<obj.properties.text.length; ++i) {\n                \n                var conf = obj.properties.text[i];\n                \n                // Add the object to the config\n                conf.object = obj;\n\n                // Set the color to black if it's not set\n                if (typeof conf.color !== 'string' || !conf.color.length) {\n                    conf.color = 'black';\n                }\n\n                RGraph.SVG.text(conf);\n            }\n        }\n    };\n\n\n\n\n\n\n\n\n    //\n    // This function sets CSS styles on a DOM element\n    //\n    // @param element    mixed  This can either be a string or a DOM\n    //                          object\n    // @param properties object This should be an object map of\n    //                          the CSS properties to set.\n    //                          JavaScript property names should\n    //                          be used.\n    //\n    RGraph.SVG.setCSS = function (element, properties)\n    {\n        if (typeof element === 'string') {\n            element = document.getElementById(element);\n        }\n\n        for (i in properties) {\n            if (typeof i === 'string') {\n                element.style[i] = properties[i];\n            }\n        }\r\n    };\n\n\n\n\n\n\n\n\n    //\n    // A set of functions which help you get data from the GET\n    // string (the query string).\n    //\n    RGraph.SVG.GET.raw = function ()\n    {\n        return location.search;\n    };\n\n\n\n\n\n\n\n\n    RGraph.SVG.GET.parse = function ()\n    {\n        if (!RGraph.SVG.isNull(RGraph.SVG.GET.__parts__)) {\n            return RGraph.SVG.GET.__parts__;\n        }\n\n        var raw   = RGraph.SVG.GET.raw().replace(/^\\?/, '');\n        var parts = raw.split(/\\&/);\n        \n        // Loop thru each part splitting it\n        for (var i=0; i<parts.length; ++i) {\n            var tmp = parts[i].split('=');\n\n            parts[tmp[0]] = decodeURI(tmp[1]);\n        }\n        \n        // Store the parsed query-string\n        RGraph.SVG.GET.__parts__ = parts;\n        \n        return parts;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Get a string of text from the query string. No special\n    // processing is done here.\n    //\n    // @param string key The part to get\n    //\n    RGraph.SVG.GET.text =\n    RGraph.SVG.GET.string = function (key)\n    {\n        var parts = RGraph.SVG.GET.parse();\n        \n        if (!parts[key]) {\n            return null;\n        }\n\n        return String(parts[key]);\n    };\n\n\n\n\n\n\n\n\n    //\n    //  This fetches a number from the query string. It\n    // trims leading zeros and reurns a number (not a\n    // string).\n    //\n    // @param string key The part to get \n    //\n    RGraph.SVG.GET.number = function (key)\n    {\n        var parts = RGraph.SVG.GET.parse();\n        \n        if (!parts[key]) {\n            return null;\n        }\n\n        return Number(parts[key]);\n    };\n\n\n\n\n\n\n\n\n    //\n    // Fetches a JSON object from the query string. It must be\n    // valid JSON and is an easy way to pass multiple values\n    //using the query string. For example:\n    //\n    // /foo.html?json={\"data\":[4,8,6],\"labels\":[\"John\",\"Luis\",\"Bob\"]}\n    // \n    // @param string key The part to get\n    //\n    RGraph.SVG.GET.json =\n    RGraph.SVG.GET.object = function (key)\n    {\n        var parts = RGraph.SVG.GET.parse();\n        \n        if (!parts[key]) {\n            return null;\n        }\n\n        return JSON.parse(parts[key]);\n    };\n\n\n\n\n\n\n\n\n    //\n    // This allows you to easily pass a  list of numbers over the\n    // query string. For example:\n    //\n    // /test.html?data=5,8,6,3,5,4,6\n    //\n    // @param string key      The part to get\n    // @param string OPTIONAL The seperator to use (defaults to a\n    //                        comma)\n    //\n    RGraph.SVG.GET.list  =\n    RGraph.SVG.GET.array = function (key)\n    {\n        var parts = RGraph.SVG.GET.parse();\n        \n        if (!parts[key]) {\n            return null;\n        }\n        \n        \n        if (!arguments[1]) {\n            var sep = ',';\n        } else {\n            var sep = arguments[1];\n        }\n        \n        var arr = parts[key].split(sep);\n        \n        // Remove any starting or trailing square brackets\n        arr[0] = arr[0].replace(/^\\[/, '');\n        arr[arr.length - 1] = arr[arr.length - 1].replace(/\\]$/, '');\n\n        // Convert strings to numbers\n        for (var i=0; i<arr.length; ++i) {\n            \n            // Get rid of surrounding quotes\n            arr[i] = arr[i].replace(/^('|\")/,'');\n            arr[i] = arr[i].replace(/('|\")$/,'');\n\n            if (Number(arr[i])) {\n                arr[i] = Number(arr[i]);\n            }\n        }\n\n        return arr;\n    };\n\n\n\n\n\n\n\n\n    //\n    // Removes the tooltip highlight from the chart. This\n    // function is called by each objects .removeHighlight()\n    // function.\n    //\n    RGraph.SVG.removeHighlight = function ()\n    {\n        var highlight = RGraph.SVG.REG.get('highlight');\n\n        // The highlight is an array\n        if (RGraph.SVG.isArray(highlight)) {\r\n            for (var i=0; i<highlight.length; ++i) {\r\n                if (highlight[i] && highlight[i].parentNode) {\r\n                    highlight[i].parentNode.removeChild(highlight[i]);\r\n                }\r\n            }\r\n\n        } else if (highlight) {\n\n            if (highlight && highlight.parentNode) {\n                highlight.parentNode.removeChild(highlight);\n            }\n        }\n            \n        RGraph.SVG.REG.set('highlight', null);\n    };\n\n\n\n\n\n\n\n\n// End module pattern\n})(window, document);\n\n\n\n\n\n\n\n\n//\n// Loosly mimicks the PHP function print_r();\n//\nwindow.$p = function (obj)\n{\n    var indent = (arguments[2] ? arguments[2] : '    ');\n    var str    = '';\n\n    var counter = typeof arguments[3] == 'number' ? arguments[3] : 0;\n    \n    if (counter >= 5) {\n        return '';\n    }\n    \n    switch (typeof obj) {\n        \n        case 'string':    str += obj + ' (' + (typeof obj) + ', ' + obj.length + ')'; break;\n        case 'number':    str += obj + ' (' + (typeof obj) + ')'; break;\n        case 'boolean':   str += obj + ' (' + (typeof obj) + ')'; break;\n        case 'function':  str += 'function () {}'; break;\n        case 'undefined': str += 'undefined'; break;\n        case 'null':      str += 'null'; break;\n        \n        case 'object':\n            // In case of null\n            if (RGraph.SVG.isNull(obj)) {\n                str += indent + 'null\\n';\n            } else {\n                str += indent + 'Object {' + '\\n'\n                for (j in obj) {\n                    str += indent + '    ' + j + ' => ' + window.$p(obj[j], true, indent + '    ', counter + 1) + '\\n';\n                }\n                str += indent + '}';\n            }\n            break;\n        \n        \n        default:\n            str += 'Unknown type: ' + typeof obj + '';\n            break;\n    }\n\n\n    //\n    // Finished, now either return if we're in a recursed call, or alert()\n    // if we're not.\n    //\n    if (!arguments[1]) {\n        alert(str);\n    }\n    \n    return str;\n};\n\n\n\n\n\n\n\n//\n// A shorthand for the default alert() function\n//\nwindow.$a = function (v)\n{\n    alert(v);\n};\n\n\n\n\n\n\n\n\n//\n// Short-hand for console.log\n//\n// @param mixed v The variable to log to the console\n//\nwindow.$c =\nwindow.$cl = function (v)\n{\n    return console.log(v);\n};\n\n\n\n\n\n\n\n\n//\n// A basic string formatting function. Use it like this:\n// \n// var str = '{1} {2} {3}'.format('a', 'b', 'c');\n//\n// Outputs: a b c\n//\n    String.prototype.format = function()\n    {\n\n        //\n        // Allow for this type of formatting: {myVar} $myVar $myVar$ %myVar% [myVar]\n        //\n        if (arguments.length === 0) {\n        \n            var s = this;\n        \n            // Allow for {myVar} style\n            if (s.match(/{[a-z0-9]+?}/i)) {\n                var s = this.replace(/{[a-z0-9]+?}/gi, function(str, idx)\n                {\n                    str = str.substr(1)\n                    str = str.substr(0, str.length - 1)\n    \n                    return window[str];\n                });\n            }\n\n            return s;\n        }\n\n\n\n\n\n        var args = arguments;\n        \n        var s = this.replace(/{(\\d+)}/g, function(str, idx)\n        {\n          return typeof args[idx - 1] !== 'undefined' ? args[idx - 1] : str;\n        });\n        \n        \n        // Save percentage signs that are escaped with either another\n        // percent or a backslash\n        s = s.replace(/(?:%|\\\\)%(\\d)/g,'__PPEERRCCEENNTT__$1');\n        \n        s = s.replace(/%(\\d+)/g, function(str, idx)\n        {\n          return typeof args[idx - 1] !== 'undefined' ? args[idx - 1] : str;\n        });\n        \n        // Now replace those saved percentage signs with a percentage sign\n        return s.replace('__PPEERRCCEENNTT__', '%');\n    };\n\n\n\n\n\n\n\n\n    // Some utility functions that help identify the type of an object\n    //\n    // Note that isUndefined() should be used like this or you'll get an\n    // error (ie with the window. prefix):\n    //\n    //        RGraph.isUndefined(window.foo)\n    //\n    RGraph.SVG.isString    = function (obj){return typeof obj === 'string';};\n    RGraph.SVG.isNumber    = function (obj){return typeof obj === 'number';};\n    //RGraph.SVG.isArray Defined above\n    RGraph.SVG.isObject    = function (obj){return typeof obj === 'object' && obj.constructor.toString().toLowerCase().indexOf('object') > 0;};\n    //RGraph.SVG.isNull  Defined above\n    RGraph.SVG.isFunction  = function (obj){return typeof obj === 'function';};\n    RGraph.SVG.isUndefined = function (obj){return typeof obj === 'undefined';};"],"names":[],"version":3,"file":"index.ff6f7292.js.map","sourceRoot":"/__parcel_source_root/"}